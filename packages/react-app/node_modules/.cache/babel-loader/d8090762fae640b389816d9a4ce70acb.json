{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\KINSHUK\\\\Desktop\\\\ETH\\\\qd-off-chain-voters-and-candidates\\\\packages\\\\react-app\\\\src\\\\App.jsx\",\n    _s = $RefreshSig$();\n\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\nimport WalletLink from \"walletlink\";\nimport { Alert, Button, Col, Menu, Row, Spin, Typography } from \"antd\";\nimport \"antd/dist/antd.css\";\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport { BrowserRouter, Link, Route, Switch } from \"react-router-dom\";\nimport Web3Modal from \"web3modal\";\nimport \"./App.css\";\nimport { Account, Contract, Faucet, GasGauge, Header, Ramp, ThemeSwitch } from \"./components\";\nimport { INFURA_ID, NETWORK, NETWORKS } from \"./constants\";\nimport { Transactor } from \"./helpers\";\nimport { useBalance, useContractLoader, useContractReader, useEventListener, useExchangePrice, useGasPrice, useUserSigner, useCurrentDistribution } from \"./hooks\";\nimport QuadraticDiplomacyVote from \"./views/QuadraticDiplomacyVote\";\nimport QuadraticDiplomacyReward from \"./views/QuadraticDiplomacyReward\";\nimport QuadraticDiplomacyCreate from \"./views/QuadraticDiplomacyCreate\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst {\n  ethers\n} = require(\"ethers\");\n\nconst {\n  Title\n} = Typography;\n/*\r\n    Welcome to 🏗 scaffold-eth !\r\n\r\n    Code:\r\n    https://github.com/austintgriffith/scaffold-eth\r\n\r\n    Support:\r\n    https://t.me/joinchat/KByvmRe5wkR-8F_zz6AjpA\r\n    or DM @austingriffith on twitter or telegram\r\n\r\n    You should get your own Infura.io ID and put it in `constants.js`\r\n    (this is your connection to the main Ethereum network for ENS etc.)\r\n\r\n\r\n    🌏 EXTERNAL CONTRACTS:\r\n    You can also bring in contract artifacts in `constants.js`\r\n    (and then use the `useExternalContractLoader()` hook!)\r\n*/\n/// 📡 What chain are your contracts deployed to?\n\nconst targetNetwork = process.env.REACT_APP_NETWORK ? NETWORKS[process.env.REACT_APP_NETWORK] : NETWORKS.localhost;\nconst serverUrl = \"http://localhost:45622/\"; // 😬 Sorry for all the console logging\n\nconst DEBUG = true;\nconst NETWORKCHECK = true; // 🛰 providers\n\nif (DEBUG) console.log(\"📡 Connecting to Mainnet Ethereum\"); // const mainnetProvider = getDefaultProvider(\"mainnet\", { infura: INFURA_ID, etherscan: ETHERSCAN_KEY, quorum: 1 });\n// const mainnetProvider = new InfuraProvider(\"mainnet\",INFURA_ID);\n//\n// attempt to connect to our own scaffold eth rpc and if that fails fall back to infura...\n// Using StaticJsonRpcProvider as the chainId won't change see https://github.com/ethers-io/ethers.js/issues/901\n\nconst scaffoldEthProvider = navigator.onLine ? new ethers.providers.StaticJsonRpcProvider(\"https://rpc.scaffoldeth.io:48544\") : null;\nconst mainnetInfura = navigator.onLine ? new ethers.providers.StaticJsonRpcProvider(\"https://mainnet.infura.io/v3/\" + INFURA_ID) : null; // ( ⚠️ Getting \"failed to meet quorum\" errors? Check your INFURA_I )\n// 🏠 Your local provider is usually pointed at your local blockchain\n\nconst localProviderUrl = targetNetwork.rpcUrl; // as you deploy to other networks you can set REACT_APP_PROVIDER=https://dai.poa.network in packages/react-app/.env\n\nconst localProviderUrlFromEnv = process.env.REACT_APP_PROVIDER ? process.env.REACT_APP_PROVIDER : localProviderUrl;\nif (DEBUG) console.log(\"🏠 Connecting to provider:\", localProviderUrlFromEnv);\nconst localProvider = new ethers.providers.StaticJsonRpcProvider(localProviderUrlFromEnv); // 🔭 block explorer URL\n\nconst blockExplorer = targetNetwork.blockExplorer; // Coinbase walletLink init\n\nconst walletLink = new WalletLink({\n  appName: \"coinbase\"\n}); // WalletLink provider\n\nconst walletLinkProvider = walletLink.makeWeb3Provider(`https://mainnet.infura.io/v3/${INFURA_ID}`, 1);\n/*\r\n  Web3 modal helps us \"connect\" external wallets:\r\n*/\n\nconst web3Modal = new Web3Modal({\n  network: \"mainnet\",\n  // Optional. If using WalletConnect on xDai, change network to \"xdai\" and add RPC info below for xDai chain.\n  cacheProvider: true,\n  // optional\n  theme: \"light\",\n  // optional. Change to \"dark\" for a dark theme.\n  providerOptions: {\n    walletconnect: {\n      package: WalletConnectProvider,\n      // required\n      options: {\n        bridge: \"https://polygon.bridge.walletconnect.org\",\n        infuraId: INFURA_ID,\n        rpc: {\n          1: `https://mainnet.infura.io/v3/${INFURA_ID}`,\n          // mainnet // For more WalletConnect providers: https://docs.walletconnect.org/quick-start/dapps/web3-provider#required\n          100: \"https://dai.poa.network\" // xDai\n\n        }\n      }\n    },\n\n    /*torus: {\r\n      package: Torus,\r\n    },*/\n    \"custom-walletlink\": {\n      display: {\n        logo: \"https://play-lh.googleusercontent.com/PjoJoG27miSglVBXoXrxBSLveV6e3EeBPpNY55aiUUBM9Q1RCETKCOqdOkX2ZydqVf0\",\n        name: \"Coinbase\",\n        description: \"Connect to Coinbase Wallet (not Coinbase App)\"\n      },\n      package: walletLinkProvider,\n      connector: async (provider, options) => {\n        await provider.enable();\n        return provider;\n      }\n    }\n  }\n});\n\nfunction App() {\n  _s();\n\n  const mainnetProvider = scaffoldEthProvider && scaffoldEthProvider._network ? scaffoldEthProvider : mainnetInfura;\n  const [injectedProvider, setInjectedProvider] = useState();\n  const [address, setAddress] = useState();\n\n  const logoutOfWeb3Modal = async () => {\n    await web3Modal.clearCachedProvider();\n\n    if (injectedProvider && injectedProvider.provider && typeof injectedProvider.provider.disconnect == \"function\") {\n      await injectedProvider.provider.disconnect();\n    }\n\n    setTimeout(() => {\n      window.location.reload();\n    }, 1);\n  };\n  /* 💵 This hook will get the price of ETH from 🦄 Uniswap: */\n\n\n  const price = useExchangePrice(targetNetwork, mainnetProvider);\n  /* 🔥 This hook will get the price of Gas from ⛽️ EtherGasStation */\n\n  const gasPrice = useGasPrice(targetNetwork, \"fast\"); // Use your injected provider from 🦊 Metamask or if you don't have it then instantly generate a 🔥 burner wallet.\n\n  const userSigner = useUserSigner(injectedProvider, localProvider);\n  useEffect(() => {\n    async function getAddress() {\n      if (userSigner) {\n        const newAddress = await userSigner.getAddress();\n        setAddress(newAddress);\n      }\n    }\n\n    getAddress();\n  }, [userSigner]);\n  const [currentDistribution, setCurrentDistribution] = useCurrentDistribution(serverUrl);\n  const isVoter = address && currentDistribution && currentDistribution.members && currentDistribution.members.includes(address); // You can warn the user if you would like them to be on a specific network\n\n  const localChainId = localProvider && localProvider._network && localProvider._network.chainId;\n  const selectedChainId = userSigner && userSigner.provider && userSigner.provider._network && userSigner.provider._network.chainId; // For more hooks, check out 🔗eth-hooks at: https://www.npmjs.com/package/eth-hooks\n  // The transactor wraps transactions and provides notificiations\n\n  const tx = Transactor(userSigner, gasPrice); // Faucet Tx can be used to send funds from the faucet\n\n  const faucetTx = Transactor(localProvider, gasPrice); // 🏗 scaffold-eth is full of handy hooks like this one to get your balance:\n\n  const yourLocalBalance = useBalance(localProvider, address); // Just plug in different 🛰 providers to get your balance on different chains:\n\n  const yourMainnetBalance = useBalance(mainnetProvider, address); // Load in your local 📝 contract and read a value from it:\n\n  const readContracts = useContractLoader(localProvider); // If you want to make 🔐 write transactions to your contracts, use the userSigner:\n\n  const writeContracts = useContractLoader(userSigner, {\n    chainId: localChainId\n  });\n  const [adminRole, setAdminRole] = useState();\n  const [isAdmin, setIsAdmin] = useState(false);\n  useEffect(() => {\n    const updateRoleAdmin = async () => {\n      if (DEBUG) console.log(\"Updating admin role...\");\n\n      if (readContracts && readContracts.QuadraticDiplomacyContract) {\n        const adminRoleFromContract = await readContracts.QuadraticDiplomacyContract.DEFAULT_ADMIN_ROLE();\n        setAdminRole(adminRoleFromContract);\n        if (DEBUG) console.log(\"Admin role updated!\");\n      }\n    };\n\n    updateRoleAdmin();\n  }, [address, readContracts]);\n  useEffect(() => {\n    const updateAdmin = async () => {\n      if (DEBUG) console.log(\"Updating admin...\");\n\n      if (readContracts && readContracts.QuadraticDiplomacyContract && adminRole) {\n        const isAdminFromContract = await readContracts.QuadraticDiplomacyContract.hasRole(adminRole, address);\n        setIsAdmin(isAdminFromContract);\n        if (DEBUG) console.log(\"Admin updated!\");\n      }\n    };\n\n    updateAdmin();\n  }, [address, readContracts, adminRole]); //\n  // 🧫 DEBUG 👨🏻‍🔬\n  //\n\n  useEffect(() => {\n    if (DEBUG && mainnetProvider && address && selectedChainId && yourLocalBalance && yourMainnetBalance && readContracts && writeContracts) {\n      console.log(\"_____________________________________ 🏗 scaffold-eth _____________________________________\");\n      console.log(\"🌎 mainnetProvider\", mainnetProvider);\n      console.log(\"🏠 localChainId\", localChainId);\n      console.log(\"👩‍💼 selected address:\", address);\n      console.log(\"🕵🏻‍♂️ selectedChainId:\", selectedChainId);\n      console.log(\"💵 yourLocalBalance\", yourLocalBalance ? ethers.utils.formatEther(yourLocalBalance) : \"...\");\n      console.log(\"💵 yourMainnetBalance\", yourMainnetBalance ? ethers.utils.formatEther(yourMainnetBalance) : \"...\");\n      console.log(\"📝 readContracts\", readContracts);\n      console.log(\"🔐 writeContracts\", writeContracts);\n    }\n  }, [mainnetProvider, address, selectedChainId, yourLocalBalance, yourMainnetBalance, readContracts, writeContracts]);\n  let networkDisplay = \"\";\n\n  if (NETWORKCHECK && localChainId && selectedChainId && localChainId !== selectedChainId) {\n    const networkSelected = NETWORK(selectedChainId);\n    const networkLocal = NETWORK(localChainId);\n\n    if (selectedChainId === 1337 && localChainId === 31337) {\n      networkDisplay = /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          zIndex: 2,\n          position: \"absolute\",\n          right: 0,\n          top: 60,\n          padding: 16\n        },\n        children: /*#__PURE__*/_jsxDEV(Alert, {\n          message: \"\\u26A0\\uFE0F Wrong Network ID\",\n          description: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\"You have \", /*#__PURE__*/_jsxDEV(\"b\", {\n              children: \"chain id 1337\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 252,\n              columnNumber: 26\n            }, this), \" for localhost and you need to change it to \", /*#__PURE__*/_jsxDEV(\"b\", {\n              children: \"31337\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 252,\n              columnNumber: 90\n            }, this), \" to work with HardHat.\", /*#__PURE__*/_jsxDEV(\"div\", {\n              children: \"(MetaMask -> Settings -> Networks -> Chain ID -> 31337)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 254,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 15\n          }, this),\n          type: \"error\",\n          closable: false\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 9\n      }, this);\n    } else {\n      networkDisplay = /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          zIndex: 2,\n          position: \"absolute\",\n          right: 0,\n          top: 60,\n          padding: 16\n        },\n        children: /*#__PURE__*/_jsxDEV(Alert, {\n          message: \"\\u26A0\\uFE0F Wrong Network\",\n          description: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\"You have \", /*#__PURE__*/_jsxDEV(\"b\", {\n              children: networkSelected && networkSelected.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 269,\n              columnNumber: 26\n            }, this), \" selected and you need to be on\", \" \", /*#__PURE__*/_jsxDEV(Button, {\n              onClick: async () => {\n                const ethereum = window.ethereum;\n                const data = [{\n                  chainId: \"0x\" + targetNetwork.chainId.toString(16),\n                  chainName: targetNetwork.name,\n                  nativeCurrency: targetNetwork.nativeCurrency,\n                  rpcUrls: [targetNetwork.rpcUrl],\n                  blockExplorerUrls: [targetNetwork.blockExplorer]\n                }];\n                console.log(\"data\", data);\n                let switchTx; // https://docs.metamask.io/guide/rpc-api.html#other-rpc-methods\n\n                try {\n                  switchTx = await ethereum.request({\n                    method: \"wallet_switchEthereumChain\",\n                    params: [{\n                      chainId: data[0].chainId\n                    }]\n                  });\n                } catch (switchError) {\n                  // not checking specific error code, because maybe we're not using MetaMask\n                  try {\n                    switchTx = await ethereum.request({\n                      method: \"wallet_addEthereumChain\",\n                      params: data\n                    });\n                  } catch (addError) {// handle \"add\" error\n                  }\n                }\n\n                if (switchTx) {\n                  console.log(switchTx);\n                }\n              },\n              children: /*#__PURE__*/_jsxDEV(\"b\", {\n                children: networkLocal && networkLocal.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 307,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 270,\n              columnNumber: 17\n            }, this), \".\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 15\n          }, this),\n          type: \"error\",\n          closable: false\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 9\n      }, this);\n    }\n  } else {\n    networkDisplay = /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        zIndex: -1,\n        position: \"absolute\",\n        right: 154,\n        top: 28,\n        padding: 16,\n        color: targetNetwork.color\n      },\n      children: targetNetwork.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 320,\n      columnNumber: 7\n    }, this);\n  }\n\n  const loadWeb3Modal = useCallback(async () => {\n    const provider = await web3Modal.connect();\n    setInjectedProvider(new ethers.providers.Web3Provider(provider));\n    provider.on(\"chainChanged\", chainId => {\n      console.log(`chain changed to ${chainId}! updating providers`);\n      setInjectedProvider(new ethers.providers.Web3Provider(provider));\n    });\n    provider.on(\"accountsChanged\", () => {\n      console.log(`account changed!`);\n      setInjectedProvider(new ethers.providers.Web3Provider(provider));\n    }); // Subscribe to session disconnection\n\n    provider.on(\"disconnect\", (code, reason) => {\n      console.log(code, reason);\n      logoutOfWeb3Modal();\n    });\n  }, [setInjectedProvider]);\n  useEffect(() => {\n    if (web3Modal.cachedProvider) {\n      loadWeb3Modal();\n    }\n  }, [loadWeb3Modal]);\n  const [route, setRoute] = useState();\n  useEffect(() => {\n    setRoute(window.location.pathname);\n  }, [setRoute]);\n  let faucetHint = \"\";\n  const faucetAvailable = localProvider && localProvider.connection && targetNetwork.name.indexOf(\"local\") !== -1;\n  const [faucetClicked, setFaucetClicked] = useState(false);\n\n  if (!faucetClicked && localProvider && localProvider._network && localProvider._network.chainId === 31337 && yourLocalBalance && ethers.utils.formatEther(yourLocalBalance) <= 0) {\n    faucetHint = /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        padding: 16\n      },\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        onClick: () => {\n          faucetTx({\n            to: address,\n            value: ethers.utils.parseEther(\"0.01\")\n          });\n          setFaucetClicked(true);\n        },\n        children: \"\\uD83D\\uDCB0 Grab funds from the faucet \\u26FD\\uFE0F\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 372,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 371,\n      columnNumber: 7\n    }, this);\n  }\n\n  function pageContentForAdmin() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Menu, {\n        style: {\n          textAlign: \"center\"\n        },\n        selectedKeys: [route],\n        mode: \"horizontal\",\n        children: [/*#__PURE__*/_jsxDEV(Menu.Item, {\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            onClick: () => {\n              setRoute(\"/\");\n            },\n            to: \"/\",\n            children: \"Create\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 393,\n            columnNumber: 13\n          }, this)\n        }, \"/\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 392,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Menu.Item, {\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            onClick: () => {\n              setRoute(\"/quadratic-diplomacy-vote\");\n            },\n            to: \"/quadratic-diplomacy-vote\",\n            children: \"Vote\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 403,\n            columnNumber: 13\n          }, this)\n        }, \"/quadratic-diplomacy-vote\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 402,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Menu.Item, {\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            onClick: () => {\n              setRoute(\"/quadratic-diplomacy-reward\");\n            },\n            to: \"/quadratic-diplomacy-reward\",\n            children: \"Reward\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 413,\n            columnNumber: 13\n          }, this)\n        }, \"/quadratic-diplomacy-reward\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 412,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Menu.Item, {\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            onClick: () => {\n              setRoute(\"/contract\");\n            },\n            to: \"/contract\",\n            children: \"Contract\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 423,\n            columnNumber: 13\n          }, this)\n        }, \"/contract\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 422,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 391,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/\",\n          children: /*#__PURE__*/_jsxDEV(QuadraticDiplomacyCreate, {\n            mainnetProvider: mainnetProvider,\n            serverUrl: serverUrl,\n            address: address,\n            userSigner: userSigner,\n            currentDistribution: currentDistribution,\n            setCurrentDistribution: setCurrentDistribution,\n            isAdmin: isAdmin\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 436,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 435,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/quadratic-diplomacy-vote\",\n          children: /*#__PURE__*/_jsxDEV(QuadraticDiplomacyVote, {\n            isVoter: isVoter,\n            mainnetProvider: mainnetProvider,\n            currentDistribution: currentDistribution,\n            address: address,\n            userSigner: userSigner,\n            serverUrl: serverUrl\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 447,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 446,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/quadratic-diplomacy-reward\",\n          children: /*#__PURE__*/_jsxDEV(QuadraticDiplomacyReward, {\n            tx: tx,\n            writeContracts: writeContracts,\n            userSigner: userSigner,\n            price: price,\n            isAdmin: isAdmin,\n            mainnetProvider: mainnetProvider,\n            currentDistribution: currentDistribution,\n            serverUrl: serverUrl,\n            address: address\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 457,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 456,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/contract\",\n          children: /*#__PURE__*/_jsxDEV(Contract, {\n            name: \"QuadraticDiplomacyContract\",\n            signer: userSigner,\n            provider: localProvider,\n            address: address,\n            blockExplorer: blockExplorer\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 470,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 469,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 434,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 390,\n      columnNumber: 7\n    }, this);\n  }\n\n  function pageContentForVoter() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(QuadraticDiplomacyVote, {\n        isVoter: isVoter,\n        mainnetProvider: mainnetProvider,\n        currentDistribution: currentDistribution,\n        address: address,\n        userSigner: userSigner,\n        serverUrl: serverUrl\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 486,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 485,\n      columnNumber: 7\n    }, this);\n  }\n\n  function pageContentForOthers() {\n    if (currentDistribution.id) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          border: \"1px solid #cccccc\",\n          padding: 16,\n          width: 800,\n          margin: \"auto\",\n          marginTop: 64\n        },\n        children: /*#__PURE__*/_jsxDEV(Title, {\n          level: 4,\n          children: \"Voting in progress\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 502,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 501,\n        columnNumber: 9\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          border: \"1px solid #cccccc\",\n          padding: 16,\n          width: 800,\n          margin: \"auto\",\n          marginTop: 64\n        },\n        children: /*#__PURE__*/_jsxDEV(Title, {\n          level: 4,\n          children: \"No voting in progress\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 508,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 507,\n        columnNumber: 9\n      }, this);\n    }\n  }\n\n  function pageContent() {\n    if (currentDistribution == null || isAdmin == null) {\n      return /*#__PURE__*/_jsxDEV(Spin, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 516,\n        columnNumber: 14\n      }, this);\n    }\n\n    if (isAdmin) {\n      return pageContentForAdmin();\n    }\n\n    if (currentDistribution && isVoter) {\n      return pageContentForVoter();\n    }\n\n    return pageContentForOthers();\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 530,\n      columnNumber: 7\n    }, this), networkDisplay, /*#__PURE__*/_jsxDEV(BrowserRouter, {\n      children: pageContent()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 532,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ThemeSwitch, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 534,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: \"fixed\",\n        textAlign: \"right\",\n        right: 0,\n        top: 0,\n        padding: 10\n      },\n      children: [/*#__PURE__*/_jsxDEV(Account, {\n        address: address,\n        localProvider: localProvider,\n        userSigner: userSigner,\n        mainnetProvider: mainnetProvider,\n        price: price,\n        web3Modal: web3Modal,\n        loadWeb3Modal: loadWeb3Modal,\n        logoutOfWeb3Modal: logoutOfWeb3Modal,\n        blockExplorer: blockExplorer,\n        isAdmin: isAdmin,\n        isVoter: isVoter\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 538,\n        columnNumber: 9\n      }, this), faucetHint]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 537,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: \"fixed\",\n        textAlign: \"left\",\n        left: 0,\n        bottom: 20,\n        padding: 10\n      },\n      children: [/*#__PURE__*/_jsxDEV(Row, {\n        align: \"middle\",\n        gutter: [4, 4],\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          span: 8,\n          children: /*#__PURE__*/_jsxDEV(Ramp, {\n            price: price,\n            address: address,\n            networks: NETWORKS\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 558,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 557,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          span: 8,\n          style: {\n            textAlign: \"center\",\n            opacity: 0.8\n          },\n          children: /*#__PURE__*/_jsxDEV(GasGauge, {\n            gasPrice: gasPrice\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 562,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 561,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          span: 8,\n          style: {\n            textAlign: \"center\",\n            opacity: 1\n          },\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => {\n              window.open(\"https://t.me/joinchat/KByvmRe5wkR-8F_zz6AjpA\");\n            },\n            size: \"large\",\n            shape: \"round\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                marginRight: 8\n              },\n              role: \"img\",\n              \"aria-label\": \"support\",\n              children: \"\\uD83D\\uDCAC\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 572,\n              columnNumber: 15\n            }, this), \"Support\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 565,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 564,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 556,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        align: \"middle\",\n        gutter: [4, 4],\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          span: 24,\n          children:\n          /*  if the local provider has a signer, let's show the faucet:  */\n          faucetAvailable ? /*#__PURE__*/_jsxDEV(Faucet, {\n            localProvider: localProvider,\n            price: price,\n            ensProvider: mainnetProvider\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 585,\n            columnNumber: 17\n          }, this) : \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 581,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 580,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 555,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 528,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"+Rwt1m30GH/pxLp6YYR8DgiZwC8=\", false, function () {\n  return [useExchangePrice, useGasPrice, useUserSigner, useCurrentDistribution, useBalance, useBalance, useContractLoader, useContractLoader];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/KINSHUK/Desktop/ETH/qd-off-chain-voters-and-candidates/packages/react-app/src/App.jsx"],"names":["WalletConnectProvider","WalletLink","Alert","Button","Col","Menu","Row","Spin","Typography","React","useCallback","useEffect","useState","BrowserRouter","Link","Route","Switch","Web3Modal","Account","Contract","Faucet","GasGauge","Header","Ramp","ThemeSwitch","INFURA_ID","NETWORK","NETWORKS","Transactor","useBalance","useContractLoader","useContractReader","useEventListener","useExchangePrice","useGasPrice","useUserSigner","useCurrentDistribution","QuadraticDiplomacyVote","QuadraticDiplomacyReward","QuadraticDiplomacyCreate","ethers","require","Title","targetNetwork","process","env","REACT_APP_NETWORK","localhost","serverUrl","DEBUG","NETWORKCHECK","console","log","scaffoldEthProvider","navigator","onLine","providers","StaticJsonRpcProvider","mainnetInfura","localProviderUrl","rpcUrl","localProviderUrlFromEnv","REACT_APP_PROVIDER","localProvider","blockExplorer","walletLink","appName","walletLinkProvider","makeWeb3Provider","web3Modal","network","cacheProvider","theme","providerOptions","walletconnect","package","options","bridge","infuraId","rpc","display","logo","name","description","connector","provider","enable","App","mainnetProvider","_network","injectedProvider","setInjectedProvider","address","setAddress","logoutOfWeb3Modal","clearCachedProvider","disconnect","setTimeout","window","location","reload","price","gasPrice","userSigner","getAddress","newAddress","currentDistribution","setCurrentDistribution","isVoter","members","includes","localChainId","chainId","selectedChainId","tx","faucetTx","yourLocalBalance","yourMainnetBalance","readContracts","writeContracts","adminRole","setAdminRole","isAdmin","setIsAdmin","updateRoleAdmin","QuadraticDiplomacyContract","adminRoleFromContract","DEFAULT_ADMIN_ROLE","updateAdmin","isAdminFromContract","hasRole","utils","formatEther","networkDisplay","networkSelected","networkLocal","zIndex","position","right","top","padding","ethereum","data","toString","chainName","nativeCurrency","rpcUrls","blockExplorerUrls","switchTx","request","method","params","switchError","addError","color","loadWeb3Modal","connect","Web3Provider","on","code","reason","cachedProvider","route","setRoute","pathname","faucetHint","faucetAvailable","connection","indexOf","faucetClicked","setFaucetClicked","to","value","parseEther","pageContentForAdmin","textAlign","pageContentForVoter","pageContentForOthers","id","border","width","margin","marginTop","pageContent","left","bottom","opacity","open","marginRight"],"mappings":"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","sourcesContent":["import WalletConnectProvider from \"@walletconnect/web3-provider\";\r\nimport WalletLink from \"walletlink\";\r\nimport { Alert, Button, Col, Menu, Row, Spin, Typography } from \"antd\";\r\nimport \"antd/dist/antd.css\";\r\nimport React, { useCallback, useEffect, useState } from \"react\";\r\nimport { BrowserRouter, Link, Route, Switch } from \"react-router-dom\";\r\nimport Web3Modal from \"web3modal\";\r\nimport \"./App.css\";\r\nimport { Account, Contract, Faucet, GasGauge, Header, Ramp, ThemeSwitch } from \"./components\";\r\nimport { INFURA_ID, NETWORK, NETWORKS } from \"./constants\";\r\nimport { Transactor } from \"./helpers\";\r\nimport {\r\n  useBalance,\r\n  useContractLoader,\r\n  useContractReader,\r\n  useEventListener,\r\n  useExchangePrice,\r\n  useGasPrice,\r\n  useUserSigner,\r\n  useCurrentDistribution,\r\n} from \"./hooks\";\r\nimport QuadraticDiplomacyVote from \"./views/QuadraticDiplomacyVote\";\r\nimport QuadraticDiplomacyReward from \"./views/QuadraticDiplomacyReward\";\r\nimport QuadraticDiplomacyCreate from \"./views/QuadraticDiplomacyCreate\";\r\n\r\nconst { ethers } = require(\"ethers\");\r\nconst { Title } = Typography;\r\n/*\r\n    Welcome to 🏗 scaffold-eth !\r\n\r\n    Code:\r\n    https://github.com/austintgriffith/scaffold-eth\r\n\r\n    Support:\r\n    https://t.me/joinchat/KByvmRe5wkR-8F_zz6AjpA\r\n    or DM @austingriffith on twitter or telegram\r\n\r\n    You should get your own Infura.io ID and put it in `constants.js`\r\n    (this is your connection to the main Ethereum network for ENS etc.)\r\n\r\n\r\n    🌏 EXTERNAL CONTRACTS:\r\n    You can also bring in contract artifacts in `constants.js`\r\n    (and then use the `useExternalContractLoader()` hook!)\r\n*/\r\n\r\n/// 📡 What chain are your contracts deployed to?\r\nconst targetNetwork = process.env.REACT_APP_NETWORK ? NETWORKS[process.env.REACT_APP_NETWORK] : NETWORKS.localhost;\r\n\r\nconst serverUrl = \"http://localhost:45622/\";\r\n\r\n// 😬 Sorry for all the console logging\r\nconst DEBUG = true;\r\nconst NETWORKCHECK = true;\r\n\r\n// 🛰 providers\r\nif (DEBUG) console.log(\"📡 Connecting to Mainnet Ethereum\");\r\n// const mainnetProvider = getDefaultProvider(\"mainnet\", { infura: INFURA_ID, etherscan: ETHERSCAN_KEY, quorum: 1 });\r\n// const mainnetProvider = new InfuraProvider(\"mainnet\",INFURA_ID);\r\n//\r\n// attempt to connect to our own scaffold eth rpc and if that fails fall back to infura...\r\n// Using StaticJsonRpcProvider as the chainId won't change see https://github.com/ethers-io/ethers.js/issues/901\r\nconst scaffoldEthProvider = navigator.onLine\r\n  ? new ethers.providers.StaticJsonRpcProvider(\"https://rpc.scaffoldeth.io:48544\")\r\n  : null;\r\nconst mainnetInfura = navigator.onLine\r\n  ? new ethers.providers.StaticJsonRpcProvider(\"https://mainnet.infura.io/v3/\" + INFURA_ID)\r\n  : null;\r\n// ( ⚠️ Getting \"failed to meet quorum\" errors? Check your INFURA_I )\r\n\r\n// 🏠 Your local provider is usually pointed at your local blockchain\r\nconst localProviderUrl = targetNetwork.rpcUrl;\r\n// as you deploy to other networks you can set REACT_APP_PROVIDER=https://dai.poa.network in packages/react-app/.env\r\nconst localProviderUrlFromEnv = process.env.REACT_APP_PROVIDER ? process.env.REACT_APP_PROVIDER : localProviderUrl;\r\nif (DEBUG) console.log(\"🏠 Connecting to provider:\", localProviderUrlFromEnv);\r\nconst localProvider = new ethers.providers.StaticJsonRpcProvider(localProviderUrlFromEnv);\r\n\r\n// 🔭 block explorer URL\r\nconst blockExplorer = targetNetwork.blockExplorer;\r\n\r\n// Coinbase walletLink init\r\nconst walletLink = new WalletLink({\r\n  appName: \"coinbase\",\r\n});\r\n\r\n// WalletLink provider\r\nconst walletLinkProvider = walletLink.makeWeb3Provider(`https://mainnet.infura.io/v3/${INFURA_ID}`, 1);\r\n\r\n/*\r\n  Web3 modal helps us \"connect\" external wallets:\r\n*/\r\nconst web3Modal = new Web3Modal({\r\n  network: \"mainnet\", // Optional. If using WalletConnect on xDai, change network to \"xdai\" and add RPC info below for xDai chain.\r\n  cacheProvider: true, // optional\r\n  theme: \"light\", // optional. Change to \"dark\" for a dark theme.\r\n  providerOptions: {\r\n    walletconnect: {\r\n      package: WalletConnectProvider, // required\r\n      options: {\r\n        bridge: \"https://polygon.bridge.walletconnect.org\",\r\n        infuraId: INFURA_ID,\r\n        rpc: {\r\n          1: `https://mainnet.infura.io/v3/${INFURA_ID}`, // mainnet // For more WalletConnect providers: https://docs.walletconnect.org/quick-start/dapps/web3-provider#required\r\n          100: \"https://dai.poa.network\", // xDai\r\n        },\r\n      },\r\n    },\r\n    /*torus: {\r\n      package: Torus,\r\n    },*/\r\n    \"custom-walletlink\": {\r\n      display: {\r\n        logo: \"https://play-lh.googleusercontent.com/PjoJoG27miSglVBXoXrxBSLveV6e3EeBPpNY55aiUUBM9Q1RCETKCOqdOkX2ZydqVf0\",\r\n        name: \"Coinbase\",\r\n        description: \"Connect to Coinbase Wallet (not Coinbase App)\",\r\n      },\r\n      package: walletLinkProvider,\r\n      connector: async (provider, options) => {\r\n        await provider.enable();\r\n        return provider;\r\n      },\r\n    },\r\n  },\r\n});\r\n\r\nfunction App() {\r\n  const mainnetProvider = scaffoldEthProvider && scaffoldEthProvider._network ? scaffoldEthProvider : mainnetInfura;\r\n\r\n  const [injectedProvider, setInjectedProvider] = useState();\r\n  const [address, setAddress] = useState();\r\n\r\n  const logoutOfWeb3Modal = async () => {\r\n    await web3Modal.clearCachedProvider();\r\n    if (injectedProvider && injectedProvider.provider && typeof injectedProvider.provider.disconnect == \"function\") {\r\n      await injectedProvider.provider.disconnect();\r\n    }\r\n    setTimeout(() => {\r\n      window.location.reload();\r\n    }, 1);\r\n  };\r\n\r\n  /* 💵 This hook will get the price of ETH from 🦄 Uniswap: */\r\n  const price = useExchangePrice(targetNetwork, mainnetProvider);\r\n\r\n  /* 🔥 This hook will get the price of Gas from ⛽️ EtherGasStation */\r\n  const gasPrice = useGasPrice(targetNetwork, \"fast\");\r\n  // Use your injected provider from 🦊 Metamask or if you don't have it then instantly generate a 🔥 burner wallet.\r\n  const userSigner = useUserSigner(injectedProvider, localProvider);\r\n\r\n  useEffect(() => {\r\n    async function getAddress() {\r\n      if (userSigner) {\r\n        const newAddress = await userSigner.getAddress();\r\n        setAddress(newAddress);\r\n      }\r\n    }\r\n    getAddress();\r\n  }, [userSigner]);\r\n\r\n  const [currentDistribution, setCurrentDistribution] = useCurrentDistribution(serverUrl);\r\n  const isVoter = address && currentDistribution && currentDistribution.members && currentDistribution.members.includes(address);\r\n\r\n  // You can warn the user if you would like them to be on a specific network\r\n  const localChainId = localProvider && localProvider._network && localProvider._network.chainId;\r\n  const selectedChainId =\r\n    userSigner && userSigner.provider && userSigner.provider._network && userSigner.provider._network.chainId;\r\n\r\n  // For more hooks, check out 🔗eth-hooks at: https://www.npmjs.com/package/eth-hooks\r\n\r\n  // The transactor wraps transactions and provides notificiations\r\n  const tx = Transactor(userSigner, gasPrice);\r\n\r\n  // Faucet Tx can be used to send funds from the faucet\r\n  const faucetTx = Transactor(localProvider, gasPrice);\r\n\r\n  // 🏗 scaffold-eth is full of handy hooks like this one to get your balance:\r\n  const yourLocalBalance = useBalance(localProvider, address);\r\n\r\n  // Just plug in different 🛰 providers to get your balance on different chains:\r\n  const yourMainnetBalance = useBalance(mainnetProvider, address);\r\n\r\n  // Load in your local 📝 contract and read a value from it:\r\n  const readContracts = useContractLoader(localProvider);\r\n\r\n  // If you want to make 🔐 write transactions to your contracts, use the userSigner:\r\n  const writeContracts = useContractLoader(userSigner, { chainId: localChainId });\r\n\r\n  const [adminRole, setAdminRole] = useState();\r\n  const [isAdmin, setIsAdmin] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const updateRoleAdmin = async () => {\r\n      if (DEBUG) console.log(\"Updating admin role...\");\r\n      if (readContracts && readContracts.QuadraticDiplomacyContract) {\r\n        const adminRoleFromContract = await readContracts.QuadraticDiplomacyContract.DEFAULT_ADMIN_ROLE();\r\n        setAdminRole(adminRoleFromContract);\r\n        if (DEBUG) console.log(\"Admin role updated!\");\r\n      }\r\n    };\r\n    updateRoleAdmin();\r\n  }, [address, readContracts]);\r\n\r\n  useEffect(() => {\r\n    const updateAdmin = async () => {\r\n      if (DEBUG) console.log(\"Updating admin...\");\r\n      if (readContracts && readContracts.QuadraticDiplomacyContract && adminRole) {\r\n        const isAdminFromContract = await readContracts.QuadraticDiplomacyContract.hasRole(adminRole, address);\r\n        setIsAdmin(isAdminFromContract);\r\n        if (DEBUG) console.log(\"Admin updated!\");\r\n      }\r\n    };\r\n    updateAdmin();\r\n  }, [address, readContracts, adminRole]);\r\n\r\n  //\r\n  // 🧫 DEBUG 👨🏻‍🔬\r\n  //\r\n  useEffect(() => {\r\n    if (\r\n      DEBUG &&\r\n      mainnetProvider &&\r\n      address &&\r\n      selectedChainId &&\r\n      yourLocalBalance &&\r\n      yourMainnetBalance &&\r\n      readContracts &&\r\n      writeContracts\r\n    ) {\r\n      console.log(\"_____________________________________ 🏗 scaffold-eth _____________________________________\");\r\n      console.log(\"🌎 mainnetProvider\", mainnetProvider);\r\n      console.log(\"🏠 localChainId\", localChainId);\r\n      console.log(\"👩‍💼 selected address:\", address);\r\n      console.log(\"🕵🏻‍♂️ selectedChainId:\", selectedChainId);\r\n      console.log(\"💵 yourLocalBalance\", yourLocalBalance ? ethers.utils.formatEther(yourLocalBalance) : \"...\");\r\n      console.log(\"💵 yourMainnetBalance\", yourMainnetBalance ? ethers.utils.formatEther(yourMainnetBalance) : \"...\");\r\n      console.log(\"📝 readContracts\", readContracts);\r\n      console.log(\"🔐 writeContracts\", writeContracts);\r\n    }\r\n  }, [mainnetProvider, address, selectedChainId, yourLocalBalance, yourMainnetBalance, readContracts, writeContracts]);\r\n\r\n  let networkDisplay = \"\";\r\n  if (NETWORKCHECK && localChainId && selectedChainId && localChainId !== selectedChainId) {\r\n    const networkSelected = NETWORK(selectedChainId);\r\n    const networkLocal = NETWORK(localChainId);\r\n    if (selectedChainId === 1337 && localChainId === 31337) {\r\n      networkDisplay = (\r\n        <div style={{ zIndex: 2, position: \"absolute\", right: 0, top: 60, padding: 16 }}>\r\n          <Alert\r\n            message=\"⚠️ Wrong Network ID\"\r\n            description={\r\n              <div>\r\n                You have <b>chain id 1337</b> for localhost and you need to change it to <b>31337</b> to work with\r\n                HardHat.\r\n                <div>(MetaMask -&gt; Settings -&gt; Networks -&gt; Chain ID -&gt; 31337)</div>\r\n              </div>\r\n            }\r\n            type=\"error\"\r\n            closable={false}\r\n          />\r\n        </div>\r\n      );\r\n    } else {\r\n      networkDisplay = (\r\n        <div style={{ zIndex: 2, position: \"absolute\", right: 0, top: 60, padding: 16 }}>\r\n          <Alert\r\n            message=\"⚠️ Wrong Network\"\r\n            description={\r\n              <div>\r\n                You have <b>{networkSelected && networkSelected.name}</b> selected and you need to be on{\" \"}\r\n                <Button\r\n                  onClick={async () => {\r\n                    const ethereum = window.ethereum;\r\n                    const data = [\r\n                      {\r\n                        chainId: \"0x\" + targetNetwork.chainId.toString(16),\r\n                        chainName: targetNetwork.name,\r\n                        nativeCurrency: targetNetwork.nativeCurrency,\r\n                        rpcUrls: [targetNetwork.rpcUrl],\r\n                        blockExplorerUrls: [targetNetwork.blockExplorer],\r\n                      },\r\n                    ];\r\n                    console.log(\"data\", data);\r\n                    let switchTx;\r\n                    // https://docs.metamask.io/guide/rpc-api.html#other-rpc-methods\r\n                    try {\r\n                      switchTx = await ethereum.request({\r\n                        method: \"wallet_switchEthereumChain\",\r\n                        params: [{ chainId: data[0].chainId }],\r\n                      });\r\n                    } catch (switchError) {\r\n                      // not checking specific error code, because maybe we're not using MetaMask\r\n                      try {\r\n                        switchTx = await ethereum.request({\r\n                          method: \"wallet_addEthereumChain\",\r\n                          params: data,\r\n                        });\r\n                      } catch (addError) {\r\n                        // handle \"add\" error\r\n                      }\r\n                    }\r\n\r\n                    if (switchTx) {\r\n                      console.log(switchTx);\r\n                    }\r\n                  }}\r\n                >\r\n                  <b>{networkLocal && networkLocal.name}</b>\r\n                </Button>\r\n                .\r\n              </div>\r\n            }\r\n            type=\"error\"\r\n            closable={false}\r\n          />\r\n        </div>\r\n      );\r\n    }\r\n  } else {\r\n    networkDisplay = (\r\n      <div style={{ zIndex: -1, position: \"absolute\", right: 154, top: 28, padding: 16, color: targetNetwork.color }}>\r\n        {targetNetwork.name}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  const loadWeb3Modal = useCallback(async () => {\r\n    const provider = await web3Modal.connect();\r\n    setInjectedProvider(new ethers.providers.Web3Provider(provider));\r\n\r\n    provider.on(\"chainChanged\", chainId => {\r\n      console.log(`chain changed to ${chainId}! updating providers`);\r\n      setInjectedProvider(new ethers.providers.Web3Provider(provider));\r\n    });\r\n\r\n    provider.on(\"accountsChanged\", () => {\r\n      console.log(`account changed!`);\r\n      setInjectedProvider(new ethers.providers.Web3Provider(provider));\r\n    });\r\n\r\n    // Subscribe to session disconnection\r\n    provider.on(\"disconnect\", (code, reason) => {\r\n      console.log(code, reason);\r\n      logoutOfWeb3Modal();\r\n    });\r\n  }, [setInjectedProvider]);\r\n\r\n  useEffect(() => {\r\n    if (web3Modal.cachedProvider) {\r\n      loadWeb3Modal();\r\n    }\r\n  }, [loadWeb3Modal]);\r\n\r\n  const [route, setRoute] = useState();\r\n  useEffect(() => {\r\n    setRoute(window.location.pathname);\r\n  }, [setRoute]);\r\n\r\n  let faucetHint = \"\";\r\n  const faucetAvailable = localProvider && localProvider.connection && targetNetwork.name.indexOf(\"local\") !== -1;\r\n\r\n  const [faucetClicked, setFaucetClicked] = useState(false);\r\n  if (\r\n    !faucetClicked &&\r\n    localProvider &&\r\n    localProvider._network &&\r\n    localProvider._network.chainId === 31337 &&\r\n    yourLocalBalance &&\r\n    ethers.utils.formatEther(yourLocalBalance) <= 0\r\n  ) {\r\n    faucetHint = (\r\n      <div style={{ padding: 16 }}>\r\n        <Button\r\n          type=\"primary\"\r\n          onClick={() => {\r\n            faucetTx({\r\n              to: address,\r\n              value: ethers.utils.parseEther(\"0.01\"),\r\n            });\r\n            setFaucetClicked(true);\r\n          }}\r\n        >\r\n          💰 Grab funds from the faucet ⛽️\r\n        </Button>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  function pageContentForAdmin() {\r\n    return (\r\n      <div>\r\n        <Menu style={{ textAlign: \"center\" }} selectedKeys={[route]} mode=\"horizontal\">\r\n          <Menu.Item key=\"/\">\r\n            <Link\r\n              onClick={() => {\r\n                setRoute(\"/\");\r\n              }}\r\n              to=\"/\"\r\n            >\r\n              Create\r\n            </Link>\r\n          </Menu.Item>\r\n          <Menu.Item key=\"/quadratic-diplomacy-vote\">\r\n            <Link\r\n              onClick={() => {\r\n                setRoute(\"/quadratic-diplomacy-vote\");\r\n              }}\r\n              to=\"/quadratic-diplomacy-vote\"\r\n            >\r\n              Vote\r\n            </Link>\r\n          </Menu.Item>\r\n          <Menu.Item key=\"/quadratic-diplomacy-reward\">\r\n            <Link\r\n              onClick={() => {\r\n                setRoute(\"/quadratic-diplomacy-reward\");\r\n              }}\r\n              to=\"/quadratic-diplomacy-reward\"\r\n            >\r\n              Reward\r\n            </Link>\r\n          </Menu.Item>\r\n          <Menu.Item key=\"/contract\">\r\n            <Link\r\n              onClick={() => {\r\n                setRoute(\"/contract\");\r\n              }}\r\n              to=\"/contract\"\r\n            >\r\n              Contract\r\n            </Link>\r\n          </Menu.Item>\r\n        </Menu>\r\n\r\n        <Switch>\r\n          <Route exact path=\"/\">\r\n            <QuadraticDiplomacyCreate\r\n              mainnetProvider={mainnetProvider}\r\n              serverUrl={serverUrl}\r\n              address={address}\r\n              userSigner={userSigner}\r\n              currentDistribution={currentDistribution}\r\n              setCurrentDistribution={setCurrentDistribution}\r\n              isAdmin={isAdmin}\r\n            />\r\n          </Route>\r\n          <Route path=\"/quadratic-diplomacy-vote\">\r\n            <QuadraticDiplomacyVote\r\n              isVoter={isVoter}\r\n              mainnetProvider={mainnetProvider}\r\n              currentDistribution={currentDistribution}\r\n              address={address}\r\n              userSigner={userSigner}\r\n              serverUrl={serverUrl}\r\n            />\r\n          </Route>\r\n          <Route path=\"/quadratic-diplomacy-reward\">\r\n            <QuadraticDiplomacyReward\r\n              tx={tx}\r\n              writeContracts={writeContracts}\r\n              userSigner={userSigner}\r\n              price={price}\r\n              isAdmin={isAdmin}\r\n              mainnetProvider={mainnetProvider}\r\n              currentDistribution={currentDistribution}\r\n              serverUrl={serverUrl}\r\n              address={address}\r\n            />\r\n          </Route>\r\n          <Route exact path=\"/contract\">\r\n            <Contract\r\n              name=\"QuadraticDiplomacyContract\"\r\n              signer={userSigner}\r\n              provider={localProvider}\r\n              address={address}\r\n              blockExplorer={blockExplorer}\r\n            />\r\n          </Route>\r\n        </Switch>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  function pageContentForVoter() {\r\n    return (\r\n      <div>\r\n        <QuadraticDiplomacyVote\r\n          isVoter={isVoter}\r\n          mainnetProvider={mainnetProvider}\r\n          currentDistribution={currentDistribution}\r\n          address={address}\r\n          userSigner={userSigner}\r\n          serverUrl={serverUrl}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  function pageContentForOthers() {\r\n    if (currentDistribution.id) {\r\n      return (\r\n        <div style={{ border: \"1px solid #cccccc\", padding: 16, width: 800, margin: \"auto\", marginTop: 64 }}>\r\n          <Title level={4}>Voting in progress</Title>\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <div style={{ border: \"1px solid #cccccc\", padding: 16, width: 800, margin: \"auto\", marginTop: 64 }}>\r\n          <Title level={4}>No voting in progress</Title>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\n  function pageContent() {\r\n    if (currentDistribution == null || isAdmin == null) {\r\n      return <Spin />;\r\n    }\r\n    if (isAdmin) {\r\n      return pageContentForAdmin();\r\n    }\r\n    if (currentDistribution && isVoter) {\r\n      return pageContentForVoter();\r\n    }\r\n    return pageContentForOthers();\r\n  }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      {/* ✏️ Edit the header and change the title to your project name */}\r\n      <Header />\r\n      {networkDisplay}\r\n      <BrowserRouter>{pageContent()}</BrowserRouter>\r\n\r\n      <ThemeSwitch />\r\n\r\n      {/* 👨‍💼 Your account is in the top right with a wallet at connect options */}\r\n      <div style={{ position: \"fixed\", textAlign: \"right\", right: 0, top: 0, padding: 10 }}>\r\n        <Account\r\n          address={address}\r\n          localProvider={localProvider}\r\n          userSigner={userSigner}\r\n          mainnetProvider={mainnetProvider}\r\n          price={price}\r\n          web3Modal={web3Modal}\r\n          loadWeb3Modal={loadWeb3Modal}\r\n          logoutOfWeb3Modal={logoutOfWeb3Modal}\r\n          blockExplorer={blockExplorer}\r\n          isAdmin={isAdmin}\r\n          isVoter={isVoter}\r\n        />\r\n        {faucetHint}\r\n      </div>\r\n\r\n      {/* 🗺 Extra UI like gas price, eth price, faucet, and support: */}\r\n      <div style={{ position: \"fixed\", textAlign: \"left\", left: 0, bottom: 20, padding: 10 }}>\r\n        <Row align=\"middle\" gutter={[4, 4]}>\r\n          <Col span={8}>\r\n            <Ramp price={price} address={address} networks={NETWORKS} />\r\n          </Col>\r\n\r\n          <Col span={8} style={{ textAlign: \"center\", opacity: 0.8 }}>\r\n            <GasGauge gasPrice={gasPrice} />\r\n          </Col>\r\n          <Col span={8} style={{ textAlign: \"center\", opacity: 1 }}>\r\n            <Button\r\n              onClick={() => {\r\n                window.open(\"https://t.me/joinchat/KByvmRe5wkR-8F_zz6AjpA\");\r\n              }}\r\n              size=\"large\"\r\n              shape=\"round\"\r\n            >\r\n              <span style={{ marginRight: 8 }} role=\"img\" aria-label=\"support\">\r\n                💬\r\n              </span>\r\n              Support\r\n            </Button>\r\n          </Col>\r\n        </Row>\r\n\r\n        <Row align=\"middle\" gutter={[4, 4]}>\r\n          <Col span={24}>\r\n            {\r\n              /*  if the local provider has a signer, let's show the faucet:  */\r\n              faucetAvailable ? (\r\n                <Faucet localProvider={localProvider} price={price} ensProvider={mainnetProvider} />\r\n              ) : (\r\n                \"\"\r\n              )\r\n            }\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}