{"ast":null,"code":"\"use strict\"; // Copyright (c) 2018-2020 WalletLink.org <https://www.walletlink.org/>\n// Copyright (c) 2018-2020 Coinbase, Inc. <https://www.coinbase.com/>\n// Licensed under the Apache License, version 2.0\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.EthereumAddressFromSignedMessageResponse = exports.SubmitEthereumTransactionResponse = exports.SignEthereumTransactionResponse = exports.SignEthereumMessageResponse = exports.isRequestEthereumAccountsResponse = exports.RequestEthereumAccountsResponse = exports.SwitchEthereumChainResponse = exports.ErrorResponse = void 0;\n\nconst Web3Method_1 = require(\"./Web3Method\");\n\nfunction ErrorResponse(method, errorMessage) {\n  return {\n    method,\n    errorMessage\n  };\n}\n\nexports.ErrorResponse = ErrorResponse;\n\nfunction SwitchEthereumChainResponse(isApproved) {\n  return {\n    method: Web3Method_1.Web3Method.switchEthereumChain,\n    result: isApproved\n  };\n}\n\nexports.SwitchEthereumChainResponse = SwitchEthereumChainResponse;\n\nfunction RequestEthereumAccountsResponse(addresses) {\n  return {\n    method: Web3Method_1.Web3Method.requestEthereumAccounts,\n    result: addresses\n  };\n}\n\nexports.RequestEthereumAccountsResponse = RequestEthereumAccountsResponse;\n\nfunction isRequestEthereumAccountsResponse(res) {\n  return res && res.method === Web3Method_1.Web3Method.requestEthereumAccounts;\n}\n\nexports.isRequestEthereumAccountsResponse = isRequestEthereumAccountsResponse;\n\nfunction SignEthereumMessageResponse(signature) {\n  return {\n    method: Web3Method_1.Web3Method.signEthereumMessage,\n    result: signature\n  };\n}\n\nexports.SignEthereumMessageResponse = SignEthereumMessageResponse;\n\nfunction SignEthereumTransactionResponse(signedData) {\n  return {\n    method: Web3Method_1.Web3Method.signEthereumTransaction,\n    result: signedData\n  };\n}\n\nexports.SignEthereumTransactionResponse = SignEthereumTransactionResponse;\n\nfunction SubmitEthereumTransactionResponse(txHash) {\n  return {\n    method: Web3Method_1.Web3Method.submitEthereumTransaction,\n    result: txHash\n  };\n}\n\nexports.SubmitEthereumTransactionResponse = SubmitEthereumTransactionResponse;\n\nfunction EthereumAddressFromSignedMessageResponse(address) {\n  return {\n    method: Web3Method_1.Web3Method.ethereumAddressFromSignedMessage,\n    result: address\n  };\n}\n\nexports.EthereumAddressFromSignedMessageResponse = EthereumAddressFromSignedMessageResponse;","map":{"version":3,"sources":["C:/Users/KINSHUK/Desktop/ETH/qd-off-chain-voters-and-candidates/node_modules/walletlink/dist/relay/Web3Response.js"],"names":["Object","defineProperty","exports","value","EthereumAddressFromSignedMessageResponse","SubmitEthereumTransactionResponse","SignEthereumTransactionResponse","SignEthereumMessageResponse","isRequestEthereumAccountsResponse","RequestEthereumAccountsResponse","SwitchEthereumChainResponse","ErrorResponse","Web3Method_1","require","method","errorMessage","isApproved","Web3Method","switchEthereumChain","result","addresses","requestEthereumAccounts","res","signature","signEthereumMessage","signedData","signEthereumTransaction","txHash","submitEthereumTransaction","address","ethereumAddressFromSignedMessage"],"mappings":"AAAA,a,CACA;AACA;AACA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,wCAAR,GAAmDF,OAAO,CAACG,iCAAR,GAA4CH,OAAO,CAACI,+BAAR,GAA0CJ,OAAO,CAACK,2BAAR,GAAsCL,OAAO,CAACM,iCAAR,GAA4CN,OAAO,CAACO,+BAAR,GAA0CP,OAAO,CAACQ,2BAAR,GAAsCR,OAAO,CAACS,aAAR,GAAwB,KAAK,CAAxU;;AACA,MAAMC,YAAY,GAAGC,OAAO,CAAC,cAAD,CAA5B;;AACA,SAASF,aAAT,CAAuBG,MAAvB,EAA+BC,YAA/B,EAA6C;AACzC,SAAO;AAAED,IAAAA,MAAF;AAAUC,IAAAA;AAAV,GAAP;AACH;;AACDb,OAAO,CAACS,aAAR,GAAwBA,aAAxB;;AACA,SAASD,2BAAT,CAAqCM,UAArC,EAAiD;AAC7C,SAAO;AAAEF,IAAAA,MAAM,EAAEF,YAAY,CAACK,UAAb,CAAwBC,mBAAlC;AAAuDC,IAAAA,MAAM,EAAEH;AAA/D,GAAP;AACH;;AACDd,OAAO,CAACQ,2BAAR,GAAsCA,2BAAtC;;AACA,SAASD,+BAAT,CAAyCW,SAAzC,EAAoD;AAChD,SAAO;AAAEN,IAAAA,MAAM,EAAEF,YAAY,CAACK,UAAb,CAAwBI,uBAAlC;AAA2DF,IAAAA,MAAM,EAAEC;AAAnE,GAAP;AACH;;AACDlB,OAAO,CAACO,+BAAR,GAA0CA,+BAA1C;;AACA,SAASD,iCAAT,CAA2Cc,GAA3C,EAAgD;AAC5C,SAAOA,GAAG,IAAIA,GAAG,CAACR,MAAJ,KAAeF,YAAY,CAACK,UAAb,CAAwBI,uBAArD;AACH;;AACDnB,OAAO,CAACM,iCAAR,GAA4CA,iCAA5C;;AACA,SAASD,2BAAT,CAAqCgB,SAArC,EAAgD;AAC5C,SAAO;AAAET,IAAAA,MAAM,EAAEF,YAAY,CAACK,UAAb,CAAwBO,mBAAlC;AAAuDL,IAAAA,MAAM,EAAEI;AAA/D,GAAP;AACH;;AACDrB,OAAO,CAACK,2BAAR,GAAsCA,2BAAtC;;AACA,SAASD,+BAAT,CAAyCmB,UAAzC,EAAqD;AACjD,SAAO;AAAEX,IAAAA,MAAM,EAAEF,YAAY,CAACK,UAAb,CAAwBS,uBAAlC;AAA2DP,IAAAA,MAAM,EAAEM;AAAnE,GAAP;AACH;;AACDvB,OAAO,CAACI,+BAAR,GAA0CA,+BAA1C;;AACA,SAASD,iCAAT,CAA2CsB,MAA3C,EAAmD;AAC/C,SAAO;AAAEb,IAAAA,MAAM,EAAEF,YAAY,CAACK,UAAb,CAAwBW,yBAAlC;AAA6DT,IAAAA,MAAM,EAAEQ;AAArE,GAAP;AACH;;AACDzB,OAAO,CAACG,iCAAR,GAA4CA,iCAA5C;;AACA,SAASD,wCAAT,CAAkDyB,OAAlD,EAA2D;AACvD,SAAO;AACHf,IAAAA,MAAM,EAAEF,YAAY,CAACK,UAAb,CAAwBa,gCAD7B;AAEHX,IAAAA,MAAM,EAAEU;AAFL,GAAP;AAIH;;AACD3B,OAAO,CAACE,wCAAR,GAAmDA,wCAAnD","sourcesContent":["\"use strict\";\n// Copyright (c) 2018-2020 WalletLink.org <https://www.walletlink.org/>\n// Copyright (c) 2018-2020 Coinbase, Inc. <https://www.coinbase.com/>\n// Licensed under the Apache License, version 2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.EthereumAddressFromSignedMessageResponse = exports.SubmitEthereumTransactionResponse = exports.SignEthereumTransactionResponse = exports.SignEthereumMessageResponse = exports.isRequestEthereumAccountsResponse = exports.RequestEthereumAccountsResponse = exports.SwitchEthereumChainResponse = exports.ErrorResponse = void 0;\nconst Web3Method_1 = require(\"./Web3Method\");\nfunction ErrorResponse(method, errorMessage) {\n    return { method, errorMessage };\n}\nexports.ErrorResponse = ErrorResponse;\nfunction SwitchEthereumChainResponse(isApproved) {\n    return { method: Web3Method_1.Web3Method.switchEthereumChain, result: isApproved };\n}\nexports.SwitchEthereumChainResponse = SwitchEthereumChainResponse;\nfunction RequestEthereumAccountsResponse(addresses) {\n    return { method: Web3Method_1.Web3Method.requestEthereumAccounts, result: addresses };\n}\nexports.RequestEthereumAccountsResponse = RequestEthereumAccountsResponse;\nfunction isRequestEthereumAccountsResponse(res) {\n    return res && res.method === Web3Method_1.Web3Method.requestEthereumAccounts;\n}\nexports.isRequestEthereumAccountsResponse = isRequestEthereumAccountsResponse;\nfunction SignEthereumMessageResponse(signature) {\n    return { method: Web3Method_1.Web3Method.signEthereumMessage, result: signature };\n}\nexports.SignEthereumMessageResponse = SignEthereumMessageResponse;\nfunction SignEthereumTransactionResponse(signedData) {\n    return { method: Web3Method_1.Web3Method.signEthereumTransaction, result: signedData };\n}\nexports.SignEthereumTransactionResponse = SignEthereumTransactionResponse;\nfunction SubmitEthereumTransactionResponse(txHash) {\n    return { method: Web3Method_1.Web3Method.submitEthereumTransaction, result: txHash };\n}\nexports.SubmitEthereumTransactionResponse = SubmitEthereumTransactionResponse;\nfunction EthereumAddressFromSignedMessageResponse(address) {\n    return {\n        method: Web3Method_1.Web3Method.ethereumAddressFromSignedMessage,\n        result: address\n    };\n}\nexports.EthereumAddressFromSignedMessageResponse = EthereumAddressFromSignedMessageResponse;\n"]},"metadata":{},"sourceType":"script"}