{"ast":null,"code":"import _regeneratorRuntime from\"C:/Users/KINSHUK/Desktop/ETH/qd-off-chain-voters-and-candidates/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"C:/Users/KINSHUK/Desktop/ETH/qd-off-chain-voters-and-candidates/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"C:/Users/KINSHUK/Desktop/ETH/qd-off-chain-voters-and-candidates/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import axios from\"axios\";import{usePoller}from\"eth-hooks\";import{useState}from\"react\";export default function useGasPrice(targetNetwork,speed){var _useState=useState(),_useState2=_slicedToArray(_useState,2),gasPrice=_useState2[0],setGasPrice=_useState2[1];var loadGasPrice=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:if(targetNetwork.hasOwnProperty(\"gasPrice\")){setGasPrice(targetNetwork.gasPrice);}else{if(navigator.onLine){axios.get(\"https://ethgasstation.info/json/ethgasAPI.json\").then(function(response){var newGasPrice=response.data[speed||\"fast\"]*100000000;if(newGasPrice!==gasPrice){setGasPrice(newGasPrice);}}).catch(function(error){return console.log(error);});}}case 1:case\"end\":return _context.stop();}}},_callee);}));return function loadGasPrice(){return _ref.apply(this,arguments);};}();usePoller(loadGasPrice,39999);return gasPrice;}","map":{"version":3,"sources":["C:/Users/KINSHUK/Desktop/ETH/qd-off-chain-voters-and-candidates/packages/react-app/src/hooks/GasPrice.js"],"names":["axios","usePoller","useState","useGasPrice","targetNetwork","speed","gasPrice","setGasPrice","loadGasPrice","hasOwnProperty","navigator","onLine","get","then","response","newGasPrice","data","catch","error","console","log"],"mappings":"+hBAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,SAAT,KAA0B,WAA1B,CACA,OAASC,QAAT,KAAyB,OAAzB,CAEA,cAAe,SAASC,CAAAA,WAAT,CAAqBC,aAArB,CAAoCC,KAApC,CAA2C,CACxD,cAAgCH,QAAQ,EAAxC,wCAAOI,QAAP,eAAiBC,WAAjB,eACA,GAAMC,CAAAA,YAAY,0FAAG,mIACnB,GAAIJ,aAAa,CAACK,cAAd,CAA6B,UAA7B,CAAJ,CAA8C,CAC5CF,WAAW,CAACH,aAAa,CAACE,QAAf,CAAX,CACD,CAFD,IAEO,CACL,GAAII,SAAS,CAACC,MAAd,CAAsB,CACpBX,KAAK,CACFY,GADH,CACO,gDADP,EAEGC,IAFH,CAEQ,SAAAC,QAAQ,CAAI,CAChB,GAAMC,CAAAA,WAAW,CAAGD,QAAQ,CAACE,IAAT,CAAcX,KAAK,EAAI,MAAvB,EAAiC,SAArD,CACA,GAAIU,WAAW,GAAKT,QAApB,CAA8B,CAC5BC,WAAW,CAACQ,WAAD,CAAX,CACD,CACF,CAPH,EAQGE,KARH,CAQS,SAAAC,KAAK,QAAIC,CAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ,CAAJ,EARd,EASD,CACF,CAfkB,sDAAH,kBAAZV,CAAAA,YAAY,0CAAlB,CAkBAP,SAAS,CAACO,YAAD,CAAe,KAAf,CAAT,CACA,MAAOF,CAAAA,QAAP,CACD","sourcesContent":["import axios from \"axios\";\r\nimport { usePoller } from \"eth-hooks\";\r\nimport { useState } from \"react\";\r\n\r\nexport default function useGasPrice(targetNetwork, speed) {\r\n  const [gasPrice, setGasPrice] = useState();\r\n  const loadGasPrice = async () => {\r\n    if (targetNetwork.hasOwnProperty(\"gasPrice\")) {\r\n      setGasPrice(targetNetwork.gasPrice);\r\n    } else {\r\n      if (navigator.onLine) {\r\n        axios\r\n          .get(\"https://ethgasstation.info/json/ethgasAPI.json\")\r\n          .then(response => {\r\n            const newGasPrice = response.data[speed || \"fast\"] * 100000000;\r\n            if (newGasPrice !== gasPrice) {\r\n              setGasPrice(newGasPrice);\r\n            }\r\n          })\r\n          .catch(error => console.log(error));\r\n      }\r\n    }\r\n  };\r\n\r\n  usePoller(loadGasPrice, 39999);\r\n  return gasPrice;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}