{"ast":null,"code":"import _regeneratorRuntime from\"C:/Users/KINSHUK/Desktop/ETH/qd-off-chain-voters-and-candidates/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"C:/Users/KINSHUK/Desktop/ETH/qd-off-chain-voters-and-candidates/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"C:/Users/KINSHUK/Desktop/ETH/qd-off-chain-voters-and-candidates/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import axios from\"axios\";import{usePoller}from\"eth-hooks\";import{useState}from\"react\";import{useEffect}from\"react\";export default function useCurrentDistribution(serverUrl){var _useState=useState({}),_useState2=_slicedToArray(_useState,2),currentDistribution=_useState2[0],setCurrentDistribution=_useState2[1];var loadCurrentDistribution=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:axios.get(serverUrl+\"currentDistribution\").then(function(response){console.log(response);setCurrentDistribution(response.data);}).catch(function(error){console.log(error);setCurrentDistribution({});});case 1:case\"end\":return _context.stop();}}},_callee);}));return function loadCurrentDistribution(){return _ref.apply(this,arguments);};}();usePoller(loadCurrentDistribution,10000);return[currentDistribution,setCurrentDistribution];}","map":{"version":3,"sources":["C:/Users/KINSHUK/Desktop/ETH/qd-off-chain-voters-and-candidates/packages/react-app/src/hooks/CurrentDistribution.js"],"names":["axios","usePoller","useState","useEffect","useCurrentDistribution","serverUrl","currentDistribution","setCurrentDistribution","loadCurrentDistribution","get","then","response","console","log","data","catch","error"],"mappings":"+hBAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,SAAT,KAA0B,WAA1B,CACA,OAASC,QAAT,KAAyB,OAAzB,CACA,OAASC,SAAT,KAA0B,OAA1B,CAEA,cAAe,SAASC,CAAAA,sBAAT,CAAgCC,SAAhC,CAA2C,CACxD,cAAsDH,QAAQ,CAAC,EAAD,CAA9D,wCAAOI,mBAAP,eAA4BC,sBAA5B,eAEA,GAAMC,CAAAA,uBAAuB,0FAAG,mIAC9BR,KAAK,CACFS,GADH,CACOJ,SAAS,CAAG,qBADnB,EAEGK,IAFH,CAEQ,SAAAC,QAAQ,CAAI,CAChBC,OAAO,CAACC,GAAR,CAAYF,QAAZ,EACAJ,sBAAsB,CAACI,QAAQ,CAACG,IAAV,CAAtB,CACD,CALH,EAMGC,KANH,CAMS,SAAAC,KAAK,CAAI,CACdJ,OAAO,CAACC,GAAR,CAAYG,KAAZ,EACAT,sBAAsB,CAAC,EAAD,CAAtB,CACD,CATH,EAD8B,sDAAH,kBAAvBC,CAAAA,uBAAuB,0CAA7B,CAaAP,SAAS,CAACO,uBAAD,CAA0B,KAA1B,CAAT,CAEA,MAAO,CAACF,mBAAD,CAAsBC,sBAAtB,CAAP,CACD","sourcesContent":["import axios from \"axios\";\r\nimport { usePoller } from \"eth-hooks\";\r\nimport { useState } from \"react\";\r\nimport { useEffect } from \"react\";\r\n\r\nexport default function useCurrentDistribution(serverUrl) {\r\n  const [currentDistribution, setCurrentDistribution] = useState({});\r\n\r\n  const loadCurrentDistribution = async () => {\r\n    axios\r\n      .get(serverUrl + \"currentDistribution\")\r\n      .then(response => {\r\n        console.log(response);\r\n        setCurrentDistribution(response.data);\r\n      })\r\n      .catch(error => {\r\n        console.log(error);\r\n        setCurrentDistribution({});\r\n      });\r\n  };\r\n\r\n  usePoller(loadCurrentDistribution, 10000);\r\n\r\n  return [currentDistribution, setCurrentDistribution];\r\n}\r\n"]},"metadata":{},"sourceType":"module"}