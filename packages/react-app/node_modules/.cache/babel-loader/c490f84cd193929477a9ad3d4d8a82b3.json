{"ast":null,"code":"\"use strict\"; // Copyright (c) 2018-2020 WalletLink.org <https://www.walletlink.org/>\n// Copyright (c) 2018-2020 Coinbase, Inc. <https://www.coinbase.com/>\n// Licensed under the Apache License, version 2.0\n\nvar _classCallCheck = require(\"C:/Users/KINSHUK/Desktop/ETH/qd-off-chain-voters-and-candidates/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"C:/Users/KINSHUK/Desktop/ETH/qd-off-chain-voters-and-candidates/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.WalletLink = void 0;\n\nvar WalletLinkAnalytics_1 = require(\"./connection/WalletLinkAnalytics\");\n\nvar ScopedLocalStorage_1 = require(\"./lib/ScopedLocalStorage\");\n\nvar WalletLinkProvider_1 = require(\"./provider/WalletLinkProvider\");\n\nvar WalletLinkSdkUI_1 = require(\"./provider/WalletLinkSdkUI\");\n\nvar WalletLinkRelay_1 = require(\"./relay/WalletLinkRelay\");\n\nvar WalletLinkRelayEventManager_1 = require(\"./relay/WalletLinkRelayEventManager\");\n\nvar util_1 = require(\"./util\");\n\nvar WALLETLINK_URL = process.env.WALLETLINK_URL || \"https://www.walletlink.org\";\nvar WALLETLINK_VERSION = process.env.WALLETLINK_VERSION || require(\"../package.json\").version || \"unknown\";\n\nvar WalletLink = /*#__PURE__*/function () {\n  /**\n   * Constructor\n   * @param options WalletLink options object\n   */\n  function WalletLink(options) {\n    _classCallCheck(this, WalletLink);\n\n    this._appName = \"\";\n    this._appLogoUrl = null;\n    this._relay = null;\n    this._relayEventManager = null;\n    var walletLinkUrl = options.walletLinkUrl || WALLETLINK_URL;\n    var walletLinkUIConstructor;\n\n    if (!options.walletLinkUIConstructor) {\n      walletLinkUIConstructor = function walletLinkUIConstructor(options) {\n        return new WalletLinkSdkUI_1.WalletLinkSdkUI(options);\n      };\n    } else {\n      walletLinkUIConstructor = options.walletLinkUIConstructor;\n    }\n\n    if (typeof options.overrideIsMetaMask === \"undefined\") {\n      this._overrideIsMetaMask = false;\n    } else {\n      this._overrideIsMetaMask = options.overrideIsMetaMask;\n    }\n\n    this._walletLinkAnalytics = options.walletLinkAnalytics ? options.walletLinkAnalytics : new WalletLinkAnalytics_1.WalletLinkAnalytics();\n    var u = new URL(walletLinkUrl);\n    var walletLinkOrigin = \"\".concat(u.protocol, \"//\").concat(u.host);\n    this._storage = new ScopedLocalStorage_1.ScopedLocalStorage(\"-walletlink:\".concat(walletLinkOrigin));\n\n    this._storage.setItem(\"version\", WalletLink.VERSION);\n\n    if (typeof window.walletLinkExtension !== \"undefined\") {\n      return;\n    }\n\n    this._relayEventManager = new WalletLinkRelayEventManager_1.WalletLinkRelayEventManager();\n    this._relay = new WalletLinkRelay_1.WalletLinkRelay({\n      walletLinkUrl: walletLinkUrl,\n      version: WALLETLINK_VERSION,\n      darkMode: !!options.darkMode,\n      walletLinkUIConstructor: walletLinkUIConstructor,\n      storage: this._storage,\n      relayEventManager: this._relayEventManager,\n      walletLinkAnalytics: this._walletLinkAnalytics\n    });\n    this.setAppInfo(options.appName, options.appLogoUrl);\n\n    this._relay.attachUI();\n  }\n  /**\n   * Create a Web3 Provider object\n   * @param jsonRpcUrl Ethereum JSON RPC URL (Default: \"\")\n   * @param chainId Ethereum Chain ID (Default: 1)\n   * @returns A Web3 Provider\n   */\n\n\n  _createClass(WalletLink, [{\n    key: \"makeWeb3Provider\",\n    value: function makeWeb3Provider() {\n      var jsonRpcUrl = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n      var chainId = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n\n      if (typeof window.walletLinkExtension !== \"undefined\") {\n        if ( //@ts-ignore\n        typeof window.walletLinkExtension.isCipher !== \"boolean\" || //@ts-ignore\n        !window.walletLinkExtension.isCipher) {\n          //@ts-ignore\n          window.walletLinkExtension.setProviderInfo(jsonRpcUrl, chainId);\n        }\n\n        return window.walletLinkExtension;\n      }\n\n      var relay = this._relay;\n\n      if (!relay || !this._relayEventManager || !this._storage) {\n        throw new Error(\"Relay not initialized, should never happen\");\n      }\n\n      if (!jsonRpcUrl) relay.setConnectDisabled(true);\n      return new WalletLinkProvider_1.WalletLinkProvider({\n        relayProvider: function relayProvider() {\n          return Promise.resolve(relay);\n        },\n        relayEventManager: this._relayEventManager,\n        storage: this._storage,\n        jsonRpcUrl: jsonRpcUrl,\n        chainId: chainId,\n        walletLinkAnalytics: this._walletLinkAnalytics,\n        overrideIsMetaMask: this._overrideIsMetaMask\n      });\n    }\n    /**\n     * Set application information\n     * @param appName Application name\n     * @param appLogoUrl Application logo image URL\n     */\n\n  }, {\n    key: \"setAppInfo\",\n    value: function setAppInfo(appName, appLogoUrl) {\n      var _a;\n\n      this._appName = appName || \"DApp\";\n      this._appLogoUrl = appLogoUrl || (0, util_1.getFavicon)();\n\n      if (typeof window.walletLinkExtension !== \"undefined\") {\n        if ( //@ts-ignore\n        typeof window.walletLinkExtension.isCipher !== \"boolean\" || //@ts-ignore\n        !window.walletLinkExtension.isCipher) {\n          //@ts-ignore\n          window.walletLinkExtension.setAppInfo(this._appName, this._appLogoUrl);\n        }\n      } else {\n        (_a = this._relay) === null || _a === void 0 ? void 0 : _a.setAppInfo(this._appName, this._appLogoUrl);\n      }\n    }\n    /**\n     * Disconnect. After disconnecting, this will reload the web page to ensure\n     * all potential stale state is cleared.\n     */\n\n  }, {\n    key: \"disconnect\",\n    value: function disconnect() {\n      var _a;\n\n      if (typeof window.walletLinkExtension !== \"undefined\") {\n        window.walletLinkExtension.close();\n      } else {\n        (_a = this._relay) === null || _a === void 0 ? void 0 : _a.resetAndReload();\n      }\n    }\n  }]);\n\n  return WalletLink;\n}();\n\nexports.WalletLink = WalletLink;\n/**\n * WalletLink version\n */\n\nWalletLink.VERSION = WALLETLINK_VERSION;","map":{"version":3,"sources":["C:/Users/KINSHUK/Desktop/ETH/qd-off-chain-voters-and-candidates/node_modules/walletlink/dist/WalletLink.js"],"names":["Object","defineProperty","exports","value","WalletLink","WalletLinkAnalytics_1","require","ScopedLocalStorage_1","WalletLinkProvider_1","WalletLinkSdkUI_1","WalletLinkRelay_1","WalletLinkRelayEventManager_1","util_1","WALLETLINK_URL","process","env","WALLETLINK_VERSION","version","options","_appName","_appLogoUrl","_relay","_relayEventManager","walletLinkUrl","walletLinkUIConstructor","WalletLinkSdkUI","overrideIsMetaMask","_overrideIsMetaMask","_walletLinkAnalytics","walletLinkAnalytics","WalletLinkAnalytics","u","URL","walletLinkOrigin","protocol","host","_storage","ScopedLocalStorage","setItem","VERSION","window","walletLinkExtension","WalletLinkRelayEventManager","WalletLinkRelay","darkMode","storage","relayEventManager","setAppInfo","appName","appLogoUrl","attachUI","jsonRpcUrl","chainId","isCipher","setProviderInfo","relay","Error","setConnectDisabled","WalletLinkProvider","relayProvider","Promise","resolve","_a","getFavicon","close","resetAndReload"],"mappings":"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","sourcesContent":["\"use strict\";\n// Copyright (c) 2018-2020 WalletLink.org <https://www.walletlink.org/>\n// Copyright (c) 2018-2020 Coinbase, Inc. <https://www.coinbase.com/>\n// Licensed under the Apache License, version 2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WalletLink = void 0;\nconst WalletLinkAnalytics_1 = require(\"./connection/WalletLinkAnalytics\");\nconst ScopedLocalStorage_1 = require(\"./lib/ScopedLocalStorage\");\nconst WalletLinkProvider_1 = require(\"./provider/WalletLinkProvider\");\nconst WalletLinkSdkUI_1 = require(\"./provider/WalletLinkSdkUI\");\nconst WalletLinkRelay_1 = require(\"./relay/WalletLinkRelay\");\nconst WalletLinkRelayEventManager_1 = require(\"./relay/WalletLinkRelayEventManager\");\nconst util_1 = require(\"./util\");\nconst WALLETLINK_URL = process.env.WALLETLINK_URL || \"https://www.walletlink.org\";\nconst WALLETLINK_VERSION = process.env.WALLETLINK_VERSION ||\n    require(\"../package.json\").version ||\n    \"unknown\";\nclass WalletLink {\n    /**\n     * Constructor\n     * @param options WalletLink options object\n     */\n    constructor(options) {\n        this._appName = \"\";\n        this._appLogoUrl = null;\n        this._relay = null;\n        this._relayEventManager = null;\n        let walletLinkUrl = options.walletLinkUrl || WALLETLINK_URL;\n        let walletLinkUIConstructor;\n        if (!options.walletLinkUIConstructor) {\n            walletLinkUIConstructor = options => new WalletLinkSdkUI_1.WalletLinkSdkUI(options);\n        }\n        else {\n            walletLinkUIConstructor = options.walletLinkUIConstructor;\n        }\n        if (typeof options.overrideIsMetaMask === \"undefined\") {\n            this._overrideIsMetaMask = false;\n        }\n        else {\n            this._overrideIsMetaMask = options.overrideIsMetaMask;\n        }\n        this._walletLinkAnalytics = options.walletLinkAnalytics\n            ? options.walletLinkAnalytics\n            : new WalletLinkAnalytics_1.WalletLinkAnalytics();\n        const u = new URL(walletLinkUrl);\n        const walletLinkOrigin = `${u.protocol}//${u.host}`;\n        this._storage = new ScopedLocalStorage_1.ScopedLocalStorage(`-walletlink:${walletLinkOrigin}`);\n        this._storage.setItem(\"version\", WalletLink.VERSION);\n        if (typeof window.walletLinkExtension !== \"undefined\") {\n            return;\n        }\n        this._relayEventManager = new WalletLinkRelayEventManager_1.WalletLinkRelayEventManager();\n        this._relay = new WalletLinkRelay_1.WalletLinkRelay({\n            walletLinkUrl: walletLinkUrl,\n            version: WALLETLINK_VERSION,\n            darkMode: !!options.darkMode,\n            walletLinkUIConstructor,\n            storage: this._storage,\n            relayEventManager: this._relayEventManager,\n            walletLinkAnalytics: this._walletLinkAnalytics\n        });\n        this.setAppInfo(options.appName, options.appLogoUrl);\n        this._relay.attachUI();\n    }\n    /**\n     * Create a Web3 Provider object\n     * @param jsonRpcUrl Ethereum JSON RPC URL (Default: \"\")\n     * @param chainId Ethereum Chain ID (Default: 1)\n     * @returns A Web3 Provider\n     */\n    makeWeb3Provider(jsonRpcUrl = \"\", chainId = 1) {\n        if (typeof window.walletLinkExtension !== \"undefined\") {\n            if (\n            //@ts-ignore\n            typeof window.walletLinkExtension.isCipher !== \"boolean\" ||\n                //@ts-ignore\n                !window.walletLinkExtension.isCipher) {\n                //@ts-ignore\n                window.walletLinkExtension.setProviderInfo(jsonRpcUrl, chainId);\n            }\n            return window.walletLinkExtension;\n        }\n        const relay = this._relay;\n        if (!relay || !this._relayEventManager || !this._storage) {\n            throw new Error(\"Relay not initialized, should never happen\");\n        }\n        if (!jsonRpcUrl)\n            relay.setConnectDisabled(true);\n        return new WalletLinkProvider_1.WalletLinkProvider({\n            relayProvider: () => Promise.resolve(relay),\n            relayEventManager: this._relayEventManager,\n            storage: this._storage,\n            jsonRpcUrl,\n            chainId,\n            walletLinkAnalytics: this._walletLinkAnalytics,\n            overrideIsMetaMask: this._overrideIsMetaMask\n        });\n    }\n    /**\n     * Set application information\n     * @param appName Application name\n     * @param appLogoUrl Application logo image URL\n     */\n    setAppInfo(appName, appLogoUrl) {\n        var _a;\n        this._appName = appName || \"DApp\";\n        this._appLogoUrl = appLogoUrl || (0, util_1.getFavicon)();\n        if (typeof window.walletLinkExtension !== \"undefined\") {\n            if (\n            //@ts-ignore\n            typeof window.walletLinkExtension.isCipher !== \"boolean\" ||\n                //@ts-ignore\n                !window.walletLinkExtension.isCipher) {\n                //@ts-ignore\n                window.walletLinkExtension.setAppInfo(this._appName, this._appLogoUrl);\n            }\n        }\n        else {\n            (_a = this._relay) === null || _a === void 0 ? void 0 : _a.setAppInfo(this._appName, this._appLogoUrl);\n        }\n    }\n    /**\n     * Disconnect. After disconnecting, this will reload the web page to ensure\n     * all potential stale state is cleared.\n     */\n    disconnect() {\n        var _a;\n        if (typeof window.walletLinkExtension !== \"undefined\") {\n            window.walletLinkExtension.close();\n        }\n        else {\n            (_a = this._relay) === null || _a === void 0 ? void 0 : _a.resetAndReload();\n        }\n    }\n}\nexports.WalletLink = WalletLink;\n/**\n * WalletLink version\n */\nWalletLink.VERSION = WALLETLINK_VERSION;\n"]},"metadata":{},"sourceType":"script"}