{"ast":null,"code":"import _regeneratorRuntime from\"C:/Users/KINSHUK/Desktop/ETH/qd-off-chain-voters-and-candidates/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"C:/Users/KINSHUK/Desktop/ETH/qd-off-chain-voters-and-candidates/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"C:/Users/KINSHUK/Desktop/ETH/qd-off-chain-voters-and-candidates/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useMemo}from\"react\";import{Alert,Input,Button,Divider,Space,Typography,Table,Tag,Select,notification,Spin}from\"antd\";import{CheckCircleTwoTone,CloseCircleTwoTone}from\"@ant-design/icons\";import{Address}from\"../components\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Text=Typography.Text,Title=Typography.Title;var _require=require(\"ethers\"),ethers=_require.ethers;var axios=require(\"axios\");var TOKENS=[\"ETH\",\"GTC\",\"DAI\"];var REWARD_STATUS={PENDING:\"reward_status.pending\",COMPLETED:\"reward_status.completed\",FAILED:\"reward_status.failed\"};var VOTING_TYPES=[\"Quadratic\",\"Common\"];export default function QuadraticDiplomacyReward(_ref){var tx=_ref.tx,writeContracts=_ref.writeContracts,userSigner=_ref.userSigner,isAdmin=_ref.isAdmin,mainnetProvider=_ref.mainnetProvider,currentDistribution=_ref.currentDistribution,serverUrl=_ref.serverUrl,address=_ref.address;var _useState=useState(0),_useState2=_slicedToArray(_useState,2),totalRewardAmount=_useState2[0],setTotalRewardAmount=_useState2[1];var _useState3=useState(REWARD_STATUS.PENDING),_useState4=_slicedToArray(_useState3,2),rewardStatus=_useState4[0],setRewardStatus=_useState4[1];var _useState5=useState(\"\"),_useState6=_slicedToArray(_useState5,2),selectedToken=_useState6[0],setSelectedToken=_useState6[1];var _useState7=useState(false),_useState8=_slicedToArray(_useState7,2),isSendingTx=_useState8[0],setIsSendingTx=_useState8[1];var _useState9=useState(\"Quadratic\"),_useState10=_slicedToArray(_useState9,2),votingType=_useState10[0],setVotingType=_useState10[1];var _useMemo=useMemo(function(){var votes={};var voteCount=0;var sqrts=0;var total=0;if(!currentDistribution.id){return[0,0,0,0];}Object.entries(currentDistribution.votes).forEach(function(memberVotes){var votingAddress=memberVotes[0];var selectedContributors=memberVotes[1];Object.entries(selectedContributors).forEach(function(voteInfo){var contributor=voteInfo[0];var vote=voteInfo[1];var sqrtVote=Math.sqrt(vote);if(votingType===\"Common\"){sqrtVote=vote;}if(!votes[contributor]){votes[contributor]={vote:0,// Sum of the square root of the votes for each member.\nsqrtVote:0};}votes[contributor].sqrtVote+=sqrtVote;votes[contributor].vote+=vote;voteCount+=vote;// Total sum of the sum of the square roots of the votes for all members.\n// Total sum of the sum of the square roots of the votes for all members.\nsqrts+=sqrtVote;});});Object.entries(votes).forEach(function(_ref2){var _ref3=_slicedToArray(_ref2,2),wallet=_ref3[0],sqrtVote=_ref3[1].sqrtVote;if(votingType===\"Common\"){total+=sqrtVote;}else{total+=Math.pow(sqrtVote,2);}});return[votes,voteCount,sqrts,total];},[currentDistribution.id,currentDistribution.id&&Object.keys(currentDistribution.votes).sort().join(),votingType]),_useMemo2=_slicedToArray(_useMemo,4),voteResults=_useMemo2[0],totalVotes=_useMemo2[1],totalSqrtVotes=_useMemo2[2],totalSquare=_useMemo2[3];var votersInfo=useMemo(function(){var voters=[];if(!currentDistribution.id){return voters;}currentDistribution.members.forEach(function(member){var hasVoted=Object.keys(currentDistribution.votes).includes(member);var totalVotes=0;var verifiedSignature=false;if(hasVoted){var selectedContributors=currentDistribution.votes[member];var sortedVotes=Object.keys(selectedContributors).sort();var message=\"qdip-vote-\"+currentDistribution.id+member+sortedVotes.join()+sortedVotes.map(function(voter){return selectedContributors[voter];}).join();var recovered=ethers.utils.verifyMessage(message,currentDistribution.votesSignatures[member]);verifiedSignature=recovered===member;Object.entries(selectedContributors).forEach(function(voteInfo){totalVotes+=voteInfo[1];});}voters.push({address:member,vote:totalVotes,hasVoted:hasVoted,verifiedSignature:verifiedSignature});});return voters;},[currentDistribution.id,currentDistribution.id&&Object.keys(currentDistribution.votes).sort().join()]);var columns=useMemo(function(){return[{title:\"Address\",dataIndex:\"address\",render:function render(address){return/*#__PURE__*/_jsx(Address,{address:address,fontSize:16,size:\"short\",ensProvider:mainnetProvider});}},{title:\"Nº of votes\",dataIndex:\"vote\",defaultSortOrder:\"descend\",align:\"center\",sorter:function sorter(a,b){return a.vote-b.vote;}},{title:votingType+\" votes\",dataIndex:\"votesSqrt\",align:\"center\",sorter:function sorter(a,b){return a.votesSqrt-b.votesSqrt;},render:function render(votesSqrt,record){return/*#__PURE__*/_jsxs(\"p\",{children:[votesSqrt.toFixed(2),\" \",/*#__PURE__*/_jsxs(Text,{type:\"secondary\",children:[\"(\",(record.votesShare*100).toFixed(2),\"%)\"]})]});}},{title:\"Reward Amount\",dataIndex:\"rewardAmount\",defaultSortOrder:\"descend\",align:\"center\",sorter:function sorter(a,b){return a.rewardAmount-b.rewardAmount;},render:function render(rewardAmount){return/*#__PURE__*/_jsxs(\"p\",{children:[rewardAmount.toFixed(2),\" \",selectedToken.toUpperCase()]});}}];},[mainnetProvider,selectedToken]);var columnsVoters=useMemo(function(){return[{title:\"Address\",dataIndex:\"address\",render:function render(address){return/*#__PURE__*/_jsx(Address,{address:address,fontSize:16,size:\"short\",ensProvider:mainnetProvider});}},{title:\"Nº of votes\",dataIndex:\"vote\",defaultSortOrder:\"descend\",align:\"center\",sorter:function sorter(a,b){return a.vote-b.vote;}},{title:\"Has Voted\",dataIndex:\"hasVoted\",align:\"center\",filters:[{text:\"Yes\",value:true},{text:\"No\",value:false}],onFilter:function onFilter(value,record){return record.hasVoted===value;},render:function render(hasVoted){return hasVoted?/*#__PURE__*/_jsx(CheckCircleTwoTone,{twoToneColor:\"#52c41a\"}):/*#__PURE__*/_jsx(CloseCircleTwoTone,{twoToneColor:\"red\"});}},{title:\"Verified\",dataIndex:\"verifiedSignature\",align:\"center\",filters:[{text:\"Yes\",value:true},{text:\"No\",value:false}],onFilter:function onFilter(value,record){return record.verifiedSignature===value;},render:function render(verifiedSignature){return verifiedSignature?/*#__PURE__*/_jsx(CheckCircleTwoTone,{twoToneColor:\"#52c41a\"}):/*#__PURE__*/_jsx(CloseCircleTwoTone,{twoToneColor:\"red\"});}}];},[mainnetProvider]);var dataSource=useMemo(function(){return Object.entries(voteResults).map(function(_ref4){var _ref5=_slicedToArray(_ref4,2),address=_ref5[0],contributor=_ref5[1];return{key:address,address:address,vote:contributor===null||contributor===void 0?void 0:contributor.vote,votesSqrt:contributor===null||contributor===void 0?void 0:contributor.sqrtVote,votesShare:votingType===\"Quadratic\"?(contributor===null||contributor===void 0?void 0:contributor.sqrtVote)/totalSqrtVotes:(contributor===null||contributor===void 0?void 0:contributor.sqrtVote)/totalSquare,rewardAmount:votingType===\"Quadratic\"?(contributor===null||contributor===void 0?void 0:contributor.sqrtVote)/totalSqrtVotes*totalRewardAmount:(contributor===null||contributor===void 0?void 0:contributor.sqrtVote)/totalSquare*totalRewardAmount,hasVoted:contributor===null||contributor===void 0?void 0:contributor.hasVoted,verifiedSignature:contributor===null||contributor===void 0?void 0:contributor.verifiedSignature};});},[voteResults,totalSquare,totalRewardAmount]);var missingVotingMembers=votersInfo.filter(function(voter){return!voter.hasVoted;});var handleFinishDistribution=/*#__PURE__*/function(){var _ref6=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(finishDistribution){var message,signature;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:message=\"qdip-finish-\"+currentDistribution.id+address;_context.next=3;return userSigner.signMessage(message);case 3:signature=_context.sent;setIsSendingTx(true);axios.post(serverUrl+\"distributions/\"+currentDistribution.id+\"/finish\",{address:address,signature:signature}).then(function(response){setIsSendingTx(false);setRewardStatus(REWARD_STATUS.COMPLETED);}).catch(function(e){console.log(\"Error finishing the distribution\");setIsSendingTx(false);});case 6:case\"end\":return _context.stop();}}},_callee);}));return function handleFinishDistribution(_x){return _ref6.apply(this,arguments);};}();var handlePayment=/*#__PURE__*/function(){var _payFromSelf=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(close){var wallets,amounts,func,tokenAddress,userAddress,tokenContract;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:// ToDo. Do some validation (non-empty elements, etc.)\nwallets=[];amounts=[];setIsSendingTx(true);// choose appropriate function from contract\nif(!(selectedToken===\"ETH\")){_context2.next=8;break;}dataSource.forEach(function(_ref7){var address=_ref7.address,rewardAmount=_ref7.rewardAmount;wallets.push(address);// Flooring some decimals to avoid rounding errors => can result in not having enough funds.\namounts.push(ethers.utils.parseEther((Math.floor(rewardAmount*10000)/10000).toString()));});func=payFromSelf?// payable functions need an `overrides` param.\n// relevant docs: https://docs.ethers.io/v5/api/contract/contract/#Contract-functionsCall\nwriteContracts.QuadraticDiplomacyContract.sharePayedETH(wallets,amounts,{value:ethers.utils.parseEther(totalRewardAmount.toString())}):writeContracts.QuadraticDiplomacyContract.shareETH(wallets,amounts);_context2.next=18;break;case 8:tokenAddress=writeContracts[selectedToken].address;_context2.next=11;return userSigner.getAddress();case 11:userAddress=_context2.sent;tokenContract=writeContracts[selectedToken].connect(userSigner);// approve only if have to pay from self wallet\nif(!payFromSelf){_context2.next=16;break;}_context2.next=16;return tx(tokenContract.approve(writeContracts.QuadraticDiplomacyContract.address,ethers.utils.parseUnits(totalRewardAmount.toString(),18)));case 16:dataSource.forEach(function(_ref8){var address=_ref8.address,rewardAmount=_ref8.rewardAmount;wallets.push(address);// Flooring some decimals to avoid rounding errors => can result in not having enough funds.\namounts.push(ethers.utils.parseUnits((Math.floor(rewardAmount*10000)/10000).toString()));});func=payFromSelf?writeContracts.QuadraticDiplomacyContract.sharePayedToken(wallets,amounts,tokenAddress,userAddress):writeContracts.QuadraticDiplomacyContract.shareToken(wallets,amounts,tokenAddress);case 18:_context2.next=20;return tx(func,function(update){// ToDo. Handle errors.\nif(update&&(update.status===\"confirmed\"||update.status===1)){notification.success({message:\"Payment sent!\"});if(close){handleFinishDistribution();}else{setIsSendingTx(false);}}else if(update.error){setIsSendingTx(false);}});case 20:case\"end\":return _context2.stop();}}},_callee2);}));function payFromSelf(_x2){return _payFromSelf.apply(this,arguments);}return payFromSelf;}();if(!isAdmin){return/*#__PURE__*/_jsxs(\"div\",{style:{border:\"1px solid #cccccc\",padding:16,width:800,margin:\"auto\",marginTop:64},children:[/*#__PURE__*/_jsx(Title,{level:4,children:\"Access denied\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Only admins can send rewards.\"})]});}if(!currentDistribution.id){return/*#__PURE__*/_jsx(\"div\",{style:{border:\"1px solid #cccccc\",padding:16,width:800,margin:\"auto\",marginTop:64},children:/*#__PURE__*/_jsx(Title,{level:4,children:\"No Current Distribution\"})});}return/*#__PURE__*/_jsxs(\"div\",{style:{border:\"1px solid #cccccc\",padding:16,width:1000,margin:\"auto\",marginTop:64},children:[/*#__PURE__*/_jsxs(Title,{level:3,children:[\"Reward Contributors \",currentDistribution.id]}),/*#__PURE__*/_jsxs(Title,{level:5,children:[\"Total votes:\\xA0\\xA0\",/*#__PURE__*/_jsx(Tag,{color:\"#000000\",children:totalVotes})]}),/*#__PURE__*/_jsxs(Title,{level:5,children:[\"Total \",votingType,\" votes:\\xA0\\xA0\",/*#__PURE__*/_jsx(Tag,{color:\"#52c41a\",children:totalSqrtVotes.toFixed(2)}),/*#__PURE__*/_jsx(Select,{defaultValue:votingType,onChange:setVotingType,children:VOTING_TYPES.map(function(vType){return/*#__PURE__*/_jsx(Select.Option,{value:vType,children:vType});})})]}),/*#__PURE__*/_jsx(Divider,{}),/*#__PURE__*/_jsx(Space,{split:true,children:/*#__PURE__*/_jsx(Input,{type:\"number\",disabled:!selectedToken// disable if no token selected\n,value:totalRewardAmount,addonBefore:\"Total Amount to Distribute\",addonAfter:/*#__PURE__*/_jsx(Select,{defaultValue:\"Select token...\",onChange:setSelectedToken,children:TOKENS.map(function(tokenName){return/*#__PURE__*/_jsx(Select.Option,{value:tokenName,children:tokenName});})}),onChange:function onChange(e){return setTotalRewardAmount(e.target.value.toLowerCase());}})}),/*#__PURE__*/_jsx(Divider,{}),/*#__PURE__*/_jsxs(Space,{direction:\"vertical\",style:{width:\"100%\"},children:[/*#__PURE__*/_jsx(Title,{level:4,children:\"Voters\"}),(missingVotingMembers===null||missingVotingMembers===void 0?void 0:missingVotingMembers.length)>0&&/*#__PURE__*/_jsx(Alert,{showIcon:true,type:\"warning\",message:/*#__PURE__*/_jsxs(Title,{level:5,children:[missingVotingMembers.length,\" members has not voted yet.\"]})}),/*#__PURE__*/_jsx(Table,{bordered:true,dataSource:votersInfo,columns:columnsVoters,pagination:{pageSize:100,hideOnSinglePage:true}}),/*#__PURE__*/_jsx(Divider,{}),/*#__PURE__*/_jsx(Title,{level:4,children:\"Candidates\"}),/*#__PURE__*/_jsx(Table,{bordered:true,dataSource:dataSource,columns:columns,pagination:{pageSize:100,hideOnSinglePage:true},footer:function footer(){return!isSendingTx?/*#__PURE__*/_jsxs(Space,{children:[/*#__PURE__*/_jsx(Button,{onClick:function onClick(){return handlePayment(false);},disabled:rewardStatus===REWARD_STATUS.COMPLETED||!totalRewardAmount||!(dataSource===null||dataSource===void 0?void 0:dataSource.length),size:\"large\",children:\"Pay \\uD83D\\uDCB8\"}),/*#__PURE__*/_jsx(Button,{onClick:function onClick(){return handlePayment(true);},disabled:rewardStatus===REWARD_STATUS.COMPLETED||!totalRewardAmount||!(dataSource===null||dataSource===void 0?void 0:dataSource.length),size:\"large\",children:\"Pay and Close \\uD83D\\uDCB8\\uD83D\\uDD12\"}),/*#__PURE__*/_jsx(Button,{onClick:function onClick(){if(confirm(\"Are you sure you want to close the distribution? You can't send payments after a distribution is closed.\")){handleFinishDistribution();}},size:\"large\",children:\"Just Close \\uD83D\\uDD12\"})]}):/*#__PURE__*/_jsx(Spin,{size:\"small\"});}})]}),/*#__PURE__*/_jsx(Divider,{})]});}","map":{"version":3,"sources":["C:/Users/KINSHUK/Desktop/ETH/qd-off-chain-voters-and-candidates/packages/react-app/src/views/QuadraticDiplomacyReward.jsx"],"names":["React","useState","useMemo","Alert","Input","Button","Divider","Space","Typography","Table","Tag","Select","notification","Spin","CheckCircleTwoTone","CloseCircleTwoTone","Address","Text","Title","require","ethers","axios","TOKENS","REWARD_STATUS","PENDING","COMPLETED","FAILED","VOTING_TYPES","QuadraticDiplomacyReward","tx","writeContracts","userSigner","isAdmin","mainnetProvider","currentDistribution","serverUrl","address","totalRewardAmount","setTotalRewardAmount","rewardStatus","setRewardStatus","selectedToken","setSelectedToken","isSendingTx","setIsSendingTx","votingType","setVotingType","votes","voteCount","sqrts","total","id","Object","entries","forEach","memberVotes","votingAddress","selectedContributors","voteInfo","contributor","vote","sqrtVote","Math","sqrt","wallet","pow","keys","sort","join","voteResults","totalVotes","totalSqrtVotes","totalSquare","votersInfo","voters","members","member","hasVoted","includes","verifiedSignature","sortedVotes","message","map","voter","recovered","utils","verifyMessage","votesSignatures","push","columns","title","dataIndex","render","defaultSortOrder","align","sorter","a","b","votesSqrt","record","toFixed","votesShare","rewardAmount","toUpperCase","columnsVoters","filters","text","value","onFilter","dataSource","key","missingVotingMembers","filter","handleFinishDistribution","finishDistribution","signMessage","signature","post","then","response","catch","e","console","log","handlePayment","close","wallets","amounts","parseEther","floor","toString","func","payFromSelf","QuadraticDiplomacyContract","sharePayedETH","shareETH","tokenAddress","getAddress","userAddress","tokenContract","connect","approve","parseUnits","sharePayedToken","shareToken","update","status","success","error","border","padding","width","margin","marginTop","vType","tokenName","target","toLowerCase","length","pageSize","hideOnSinglePage","confirm"],"mappings":"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","sourcesContent":["import React, { useState, useMemo } from \"react\";\r\nimport { Alert, Input, Button, Divider, Space, Typography, Table, Tag, Select, notification, Spin } from \"antd\";\r\nimport { CheckCircleTwoTone, CloseCircleTwoTone } from \"@ant-design/icons\";\r\nimport { Address } from \"../components\";\r\nconst { Text, Title } = Typography;\r\nconst { ethers } = require(\"ethers\");\r\nconst axios = require(\"axios\");\r\n\r\nconst TOKENS = [\"ETH\", \"GTC\", \"DAI\"];\r\nconst REWARD_STATUS = {\r\n  PENDING: \"reward_status.pending\",\r\n  COMPLETED: \"reward_status.completed\",\r\n  FAILED: \"reward_status.failed\",\r\n};\r\nconst VOTING_TYPES = [\"Quadratic\", \"Common\"];\r\n\r\nexport default function QuadraticDiplomacyReward({\r\n  tx,\r\n  writeContracts,\r\n  userSigner,\r\n  isAdmin,\r\n  mainnetProvider,\r\n  currentDistribution,\r\n  serverUrl,\r\n  address,\r\n}) {\r\n  const [totalRewardAmount, setTotalRewardAmount] = useState(0);\r\n  const [rewardStatus, setRewardStatus] = useState(REWARD_STATUS.PENDING);\r\n  const [selectedToken, setSelectedToken] = useState(\"\");\r\n  const [isSendingTx, setIsSendingTx] = useState(false);\r\n  const [votingType, setVotingType] = useState(\"Quadratic\");\r\n\r\n  const [voteResults, totalVotes, totalSqrtVotes, totalSquare] = useMemo(() => {\r\n    const votes = {};\r\n    let voteCount = 0;\r\n    let sqrts = 0;\r\n    let total = 0;\r\n\r\n    if (!currentDistribution.id) {\r\n      return [0, 0, 0, 0];\r\n    }\r\n\r\n    Object.entries(currentDistribution.votes).forEach(memberVotes => {\r\n      const votingAddress = memberVotes[0];\r\n      const selectedContributors = memberVotes[1];\r\n\r\n      Object.entries(selectedContributors).forEach(voteInfo => {\r\n        const contributor = voteInfo[0];\r\n        const vote = voteInfo[1];\r\n        let sqrtVote = Math.sqrt(vote);\r\n        if (votingType === \"Common\") {\r\n          sqrtVote = vote;\r\n        }\r\n\r\n        if (!votes[contributor]) {\r\n          votes[contributor] = {\r\n            vote: 0,\r\n            // Sum of the square root of the votes for each member.\r\n            sqrtVote: 0,\r\n          };\r\n        }\r\n\r\n        votes[contributor].sqrtVote += sqrtVote;\r\n        votes[contributor].vote += vote;\r\n\r\n        voteCount += vote;\r\n        // Total sum of the sum of the square roots of the votes for all members.\r\n        sqrts += sqrtVote;\r\n      });\r\n    });\r\n\r\n    Object.entries(votes).forEach(([wallet, { sqrtVote }]) => {\r\n      if (votingType === \"Common\") {\r\n        total += sqrtVote;\r\n      } else {\r\n        total += Math.pow(sqrtVote, 2);\r\n      }\r\n    });\r\n\r\n    return [votes, voteCount, sqrts, total];\r\n  }, [currentDistribution.id, currentDistribution.id && Object.keys(currentDistribution.votes).sort().join(), votingType]);\r\n\r\n  const votersInfo = useMemo(() => {\r\n    const voters = [];\r\n\r\n    if (!currentDistribution.id) {\r\n      return voters;\r\n    }\r\n\r\n    currentDistribution.members.forEach(member => {\r\n      const hasVoted = Object.keys(currentDistribution.votes).includes(member);\r\n      let totalVotes = 0;\r\n      let verifiedSignature = false;\r\n\r\n      if (hasVoted) {\r\n        const selectedContributors = currentDistribution.votes[member];\r\n\r\n        const sortedVotes = Object.keys(selectedContributors).sort();\r\n\r\n        const message =\r\n          \"qdip-vote-\" +\r\n          currentDistribution.id +\r\n          member +\r\n          sortedVotes.join() +\r\n          sortedVotes.map(voter => selectedContributors[voter]).join();\r\n\r\n        const recovered = ethers.utils.verifyMessage(message, currentDistribution.votesSignatures[member]);\r\n        verifiedSignature = recovered === member;\r\n\r\n        Object.entries(selectedContributors).forEach(voteInfo => {\r\n          totalVotes += voteInfo[1];\r\n        });\r\n      }\r\n\r\n      voters.push({\r\n        address: member,\r\n        vote: totalVotes,\r\n        hasVoted: hasVoted,\r\n        verifiedSignature: verifiedSignature,\r\n      });\r\n    });\r\n\r\n    return voters;\r\n  }, [currentDistribution.id, currentDistribution.id && Object.keys(currentDistribution.votes).sort().join()]);\r\n\r\n  const columns = useMemo(\r\n    () => [\r\n      {\r\n        title: \"Address\",\r\n        dataIndex: \"address\",\r\n        render: address => <Address address={address} fontSize={16} size=\"short\" ensProvider={mainnetProvider} />,\r\n      },\r\n      {\r\n        title: \"Nº of votes\",\r\n        dataIndex: \"vote\",\r\n        defaultSortOrder: \"descend\",\r\n        align: \"center\",\r\n        sorter: (a, b) => a.vote - b.vote,\r\n      },\r\n      {\r\n        title: votingType + \" votes\",\r\n        dataIndex: \"votesSqrt\",\r\n        align: \"center\",\r\n        sorter: (a, b) => a.votesSqrt - b.votesSqrt,\r\n        render: (votesSqrt, record) => (\r\n          <p>\r\n            {votesSqrt.toFixed(2)} <Text type=\"secondary\">({(record.votesShare * 100).toFixed(2)}%)</Text>\r\n          </p>\r\n        ),\r\n      },\r\n      {\r\n        title: \"Reward Amount\",\r\n        dataIndex: \"rewardAmount\",\r\n        defaultSortOrder: \"descend\",\r\n        align: \"center\",\r\n        sorter: (a, b) => a.rewardAmount - b.rewardAmount,\r\n        render: rewardAmount => (\r\n          <p>\r\n            {rewardAmount.toFixed(2)} {selectedToken.toUpperCase()}\r\n          </p>\r\n        ),\r\n      },\r\n    ],\r\n    [mainnetProvider, selectedToken],\r\n  );\r\n\r\n  const columnsVoters = useMemo(\r\n    () => [\r\n      {\r\n        title: \"Address\",\r\n        dataIndex: \"address\",\r\n        render: address => <Address address={address} fontSize={16} size=\"short\" ensProvider={mainnetProvider} />,\r\n      },\r\n      {\r\n        title: \"Nº of votes\",\r\n        dataIndex: \"vote\",\r\n        defaultSortOrder: \"descend\",\r\n        align: \"center\",\r\n        sorter: (a, b) => a.vote - b.vote,\r\n      },\r\n      {\r\n        title: \"Has Voted\",\r\n        dataIndex: \"hasVoted\",\r\n        align: \"center\",\r\n        filters: [\r\n          { text: \"Yes\", value: true },\r\n          { text: \"No\", value: false },\r\n        ],\r\n        onFilter: (value, record) => record.hasVoted === value,\r\n        render: hasVoted =>\r\n          hasVoted ? <CheckCircleTwoTone twoToneColor=\"#52c41a\" /> : <CloseCircleTwoTone twoToneColor=\"red\" />,\r\n      },\r\n      {\r\n        title: \"Verified\",\r\n        dataIndex: \"verifiedSignature\",\r\n        align: \"center\",\r\n        filters: [\r\n          { text: \"Yes\", value: true },\r\n          { text: \"No\", value: false },\r\n        ],\r\n        onFilter: (value, record) => record.verifiedSignature === value,\r\n        render: verifiedSignature =>\r\n          verifiedSignature ? <CheckCircleTwoTone twoToneColor=\"#52c41a\" /> : <CloseCircleTwoTone twoToneColor=\"red\" />,\r\n      },\r\n    ],\r\n    [mainnetProvider],\r\n  );\r\n\r\n  const dataSource = useMemo(\r\n    () =>\r\n      Object.entries(voteResults).map(([address, contributor]) => ({\r\n        key: address,\r\n        address: address,\r\n        vote: contributor?.vote,\r\n        votesSqrt: contributor?.sqrtVote,\r\n        votesShare:\r\n          votingType === \"Quadratic\"\r\n            ? contributor?.sqrtVote / totalSqrtVotes\r\n            : contributor?.sqrtVote / totalSquare,\r\n        rewardAmount:\r\n          votingType === \"Quadratic\"\r\n            ? (contributor?.sqrtVote / totalSqrtVotes) * totalRewardAmount\r\n            : (contributor?.sqrtVote / totalSquare) * totalRewardAmount,\r\n        hasVoted: contributor?.hasVoted,\r\n        verifiedSignature: contributor?.verifiedSignature,\r\n      })),\r\n    [voteResults, totalSquare, totalRewardAmount],\r\n  );\r\n\r\n  const missingVotingMembers = votersInfo.filter(voter => !voter.hasVoted);\r\n\r\n  const handleFinishDistribution = async finishDistribution => {\r\n    const message = \"qdip-finish-\" + currentDistribution.id + address;\r\n    const signature = await userSigner.signMessage(message);\r\n\r\n    setIsSendingTx(true);\r\n\r\n    axios\r\n      .post(serverUrl + \"distributions/\" + currentDistribution.id + \"/finish\", {\r\n        address: address,\r\n        signature: signature,\r\n      })\r\n      .then(response => {\r\n        setIsSendingTx(false);\r\n        setRewardStatus(REWARD_STATUS.COMPLETED);\r\n      })\r\n      .catch(e => {\r\n        console.log(\"Error finishing the distribution\");\r\n        setIsSendingTx(false);\r\n      });\r\n  };\r\n\r\n  const handlePayment = async function payFromSelf(close) {\r\n    // ToDo. Do some validation (non-empty elements, etc.)\r\n    const wallets = [];\r\n    const amounts = [];\r\n\r\n    setIsSendingTx(true);\r\n    // choose appropriate function from contract\r\n    let func;\r\n    if (selectedToken === \"ETH\") {\r\n      dataSource.forEach(({ address, rewardAmount }) => {\r\n        wallets.push(address);\r\n        // Flooring some decimals to avoid rounding errors => can result in not having enough funds.\r\n        amounts.push(ethers.utils.parseEther((Math.floor(rewardAmount * 10000) / 10000).toString()));\r\n      });\r\n\r\n      func = payFromSelf\r\n        ? // payable functions need an `overrides` param.\r\n          // relevant docs: https://docs.ethers.io/v5/api/contract/contract/#Contract-functionsCall\r\n          writeContracts.QuadraticDiplomacyContract.sharePayedETH(wallets, amounts, {\r\n            value: ethers.utils.parseEther(totalRewardAmount.toString()),\r\n          })\r\n        : writeContracts.QuadraticDiplomacyContract.shareETH(wallets, amounts);\r\n    } else {\r\n      const tokenAddress = writeContracts[selectedToken].address;\r\n      const userAddress = await userSigner.getAddress();\r\n      const tokenContract = writeContracts[selectedToken].connect(userSigner);\r\n      // approve only if have to pay from self wallet\r\n      if (payFromSelf) {\r\n        await tx(\r\n          tokenContract.approve(\r\n            writeContracts.QuadraticDiplomacyContract.address,\r\n            ethers.utils.parseUnits(totalRewardAmount.toString(), 18),\r\n          ),\r\n        );\r\n      }\r\n\r\n      dataSource.forEach(({ address, rewardAmount }) => {\r\n        wallets.push(address);\r\n        // Flooring some decimals to avoid rounding errors => can result in not having enough funds.\r\n        amounts.push(ethers.utils.parseUnits((Math.floor(rewardAmount * 10000) / 10000).toString()));\r\n      });\r\n      func = payFromSelf\r\n        ? writeContracts.QuadraticDiplomacyContract.sharePayedToken(wallets, amounts, tokenAddress, userAddress)\r\n        : writeContracts.QuadraticDiplomacyContract.shareToken(wallets, amounts, tokenAddress);\r\n    }\r\n\r\n    await tx(func, update => {\r\n      // ToDo. Handle errors.\r\n      if (update && (update.status === \"confirmed\" || update.status === 1)) {\r\n        notification.success({\r\n          message: \"Payment sent!\",\r\n        });\r\n\r\n        if (close) {\r\n          handleFinishDistribution();\r\n        } else {\r\n          setIsSendingTx(false);\r\n        }\r\n      } else if (update.error) {\r\n        setIsSendingTx(false);\r\n      }\r\n    });\r\n  };\r\n\r\n  if (!isAdmin) {\r\n    return (\r\n      <div style={{ border: \"1px solid #cccccc\", padding: 16, width: 800, margin: \"auto\", marginTop: 64 }}>\r\n        <Title level={4}>Access denied</Title>\r\n        <p>Only admins can send rewards.</p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (!currentDistribution.id) {\r\n    return (\r\n      <div style={{ border: \"1px solid #cccccc\", padding: 16, width: 800, margin: \"auto\", marginTop: 64 }}>\r\n        <Title level={4}>No Current Distribution</Title>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div style={{ border: \"1px solid #cccccc\", padding: 16, width: 1000, margin: \"auto\", marginTop: 64 }}>\r\n      <Title level={3}>Reward Contributors {currentDistribution.id}</Title>\r\n      <Title level={5}>\r\n        Total votes:&nbsp;&nbsp;\r\n        <Tag color=\"#000000\">{totalVotes}</Tag>\r\n      </Title>\r\n      <Title level={5}>\r\n        Total {votingType} votes:&nbsp;&nbsp;\r\n        <Tag color=\"#52c41a\">{totalSqrtVotes.toFixed(2)}</Tag>\r\n        <Select defaultValue={votingType} onChange={setVotingType}>\r\n          {VOTING_TYPES.map(vType => (\r\n            <Select.Option value={vType}>{vType}</Select.Option>\r\n          ))}\r\n        </Select>\r\n      </Title>\r\n      <Divider />\r\n      <Space split>\r\n        <Input\r\n          type=\"number\"\r\n          disabled={!selectedToken} // disable if no token selected\r\n          value={totalRewardAmount}\r\n          addonBefore=\"Total Amount to Distribute\"\r\n          addonAfter={\r\n            <Select defaultValue=\"Select token...\" onChange={setSelectedToken}>\r\n              {TOKENS.map(tokenName => (\r\n                <Select.Option value={tokenName}>{tokenName}</Select.Option>\r\n              ))}\r\n            </Select>\r\n          }\r\n          onChange={e => setTotalRewardAmount(e.target.value.toLowerCase())}\r\n        />\r\n      </Space>\r\n      <Divider />\r\n      <Space direction=\"vertical\" style={{ width: \"100%\" }}>\r\n        <Title level={4}>Voters</Title>\r\n        {missingVotingMembers?.length > 0 && (\r\n          <Alert\r\n            showIcon\r\n            type=\"warning\"\r\n            message={<Title level={5}>{missingVotingMembers.length} members has not voted yet.</Title>}\r\n          />\r\n        )}\r\n        <Table\r\n          bordered\r\n          dataSource={votersInfo}\r\n          columns={columnsVoters}\r\n          pagination={{ pageSize: 100, hideOnSinglePage: true }}\r\n        />\r\n        <Divider />\r\n        <Title level={4}>Candidates</Title>\r\n        <Table\r\n          bordered\r\n          dataSource={dataSource}\r\n          columns={columns}\r\n          pagination={{ pageSize: 100, hideOnSinglePage: true }}\r\n          footer={() =>\r\n            !isSendingTx ? (\r\n              <Space>\r\n                <Button\r\n                  onClick={() => handlePayment(false)}\r\n                  disabled={rewardStatus === REWARD_STATUS.COMPLETED || !totalRewardAmount || !dataSource?.length}\r\n                  size=\"large\"\r\n                >\r\n                  Pay 💸\r\n                </Button>\r\n                <Button\r\n                  onClick={() => handlePayment(true)}\r\n                  disabled={rewardStatus === REWARD_STATUS.COMPLETED || !totalRewardAmount || !dataSource?.length}\r\n                  size=\"large\"\r\n                >\r\n                  Pay and Close 💸🔒\r\n                </Button>\r\n                <Button\r\n                  onClick={() => { if (confirm(\"Are you sure you want to close the distribution? You can't send payments after a distribution is closed.\")) { handleFinishDistribution() }}}\r\n                  size=\"large\"\r\n                >\r\n                  Just Close 🔒\r\n                </Button>\r\n              </Space>\r\n            ) : (\r\n              <Spin size=\"small\" />\r\n            )\r\n          }\r\n        />\r\n      </Space>\r\n      <Divider />\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}