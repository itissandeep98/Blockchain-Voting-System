{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\n/*\r\n  ~ What it does? ~\r\n\r\n  Gets a tokenlist (see more at https://tokenlists.org/), returning the .tokens only\r\n\r\n  ~ How can I use? ~\r\n\r\n  const tokenList = useTokenList(); <- default returns the Unsiwap tokens\r\n  const tokenList = useTokenList(\"https://gateway.ipfs.io/ipns/tokens.uniswap.org\");\r\n\r\n  ~ Features ~\r\n\r\n  - Optional - specify chainId to filter by chainId\r\n*/\n\nconst useTokenList = (tokenListUri, chainId) => {\n  _s();\n\n  const [tokenList, setTokenList] = useState([]);\n\n  const _tokenListUri = tokenListUri || \"https://gateway.ipfs.io/ipns/tokens.uniswap.org\";\n\n  useEffect(() => {\n    const getTokenList = async () => {\n      if (navigator.onLine) {\n        try {\n          const tokenList = await fetch(_tokenListUri);\n          const tokenListJson = await tokenList.json();\n\n          let _tokenList;\n\n          if (chainId) {\n            _tokenList = tokenListJson.tokens.filter(function (t) {\n              return t.chainId === chainId;\n            });\n          } else {\n            _tokenList = tokenListJson;\n          }\n\n          setTokenList(_tokenList.tokens);\n        } catch (e) {\n          console.log(e);\n        }\n      }\n    };\n\n    getTokenList();\n  }, [tokenListUri]);\n  return tokenList;\n};\n\n_s(useTokenList, \"qHsUdWUNY2KMhbwpltwGtYzozhQ=\");\n\nexport default useTokenList;","map":{"version":3,"sources":["C:/Users/KINSHUK/Desktop/ETH/qd-off-chain-voters-and-candidates/packages/react-app/src/hooks/TokenList.js"],"names":["useEffect","useState","useTokenList","tokenListUri","chainId","tokenList","setTokenList","_tokenListUri","getTokenList","navigator","onLine","fetch","tokenListJson","json","_tokenList","tokens","filter","t","e","console","log"],"mappings":";;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,YAAY,GAAG,CAACC,YAAD,EAAeC,OAAf,KAA2B;AAAA;;AAC9C,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BL,QAAQ,CAAC,EAAD,CAA1C;;AAEA,QAAMM,aAAa,GAAGJ,YAAY,IAAI,iDAAtC;;AAEAH,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMQ,YAAY,GAAG,YAAY;AAC/B,UAAIC,SAAS,CAACC,MAAd,EAAsB;AACpB,YAAI;AACF,gBAAML,SAAS,GAAG,MAAMM,KAAK,CAACJ,aAAD,CAA7B;AACA,gBAAMK,aAAa,GAAG,MAAMP,SAAS,CAACQ,IAAV,EAA5B;;AACA,cAAIC,UAAJ;;AAEA,cAAIV,OAAJ,EAAa;AACXU,YAAAA,UAAU,GAAGF,aAAa,CAACG,MAAd,CAAqBC,MAArB,CAA4B,UAAUC,CAAV,EAAa;AACpD,qBAAOA,CAAC,CAACb,OAAF,KAAcA,OAArB;AACD,aAFY,CAAb;AAGD,WAJD,MAIO;AACLU,YAAAA,UAAU,GAAGF,aAAb;AACD;;AAEDN,UAAAA,YAAY,CAACQ,UAAU,CAACC,MAAZ,CAAZ;AACD,SAdD,CAcE,OAAOG,CAAP,EAAU;AACVC,UAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACD;AACF;AACF,KApBD;;AAqBAV,IAAAA,YAAY;AACb,GAvBQ,EAuBN,CAACL,YAAD,CAvBM,CAAT;AAyBA,SAAOE,SAAP;AACD,CA/BD;;GAAMH,Y;;AAiCN,eAAeA,YAAf","sourcesContent":["import { useEffect, useState } from \"react\";\r\n\r\n/*\r\n  ~ What it does? ~\r\n\r\n  Gets a tokenlist (see more at https://tokenlists.org/), returning the .tokens only\r\n\r\n  ~ How can I use? ~\r\n\r\n  const tokenList = useTokenList(); <- default returns the Unsiwap tokens\r\n  const tokenList = useTokenList(\"https://gateway.ipfs.io/ipns/tokens.uniswap.org\");\r\n\r\n  ~ Features ~\r\n\r\n  - Optional - specify chainId to filter by chainId\r\n*/\r\n\r\nconst useTokenList = (tokenListUri, chainId) => {\r\n  const [tokenList, setTokenList] = useState([]);\r\n\r\n  const _tokenListUri = tokenListUri || \"https://gateway.ipfs.io/ipns/tokens.uniswap.org\";\r\n\r\n  useEffect(() => {\r\n    const getTokenList = async () => {\r\n      if (navigator.onLine) {\r\n        try {\r\n          const tokenList = await fetch(_tokenListUri);\r\n          const tokenListJson = await tokenList.json();\r\n          let _tokenList;\r\n\r\n          if (chainId) {\r\n            _tokenList = tokenListJson.tokens.filter(function (t) {\r\n              return t.chainId === chainId;\r\n            });\r\n          } else {\r\n            _tokenList = tokenListJson;\r\n          }\r\n\r\n          setTokenList(_tokenList.tokens);\r\n        } catch (e) {\r\n          console.log(e);\r\n        }\r\n      }\r\n    };\r\n    getTokenList();\r\n  }, [tokenListUri]);\r\n\r\n  return tokenList;\r\n};\r\n\r\nexport default useTokenList;\r\n"]},"metadata":{},"sourceType":"module"}