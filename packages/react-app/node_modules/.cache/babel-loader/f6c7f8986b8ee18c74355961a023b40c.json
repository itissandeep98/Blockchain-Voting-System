{"ast":null,"code":"var _require = require('./src/classes'),\n    EthereumRpcError = _require.EthereumRpcError,\n    EthereumProviderError = _require.EthereumProviderError;\n\nvar _require2 = require('./src/utils'),\n    serializeError = _require2.serializeError,\n    getMessageFromCode = _require2.getMessageFromCode;\n\nvar ethErrors = require('./src/errors');\n\nvar ERROR_CODES = require('./src/errorCodes.json');\n\nmodule.exports = {\n  ethErrors: ethErrors,\n  EthereumRpcError: EthereumRpcError,\n  EthereumProviderError: EthereumProviderError,\n  serializeError: serializeError,\n  getMessageFromCode: getMessageFromCode,\n\n  /** @type ErrorCodes */\n  ERROR_CODES: ERROR_CODES\n}; // Types\n\n/**\n * @typedef {Object} EthereumProviderErrorCodes\n * @property {number} userRejectedRequest\n * @property {number} unauthorized\n * @property {number} unsupportedMethod\n */\n\n/**\n * @typedef {Object} EthereumRpcErrorCodes\n * @property {number} parse\n * @property {number} invalidRequest\n * @property {number} invalidParams\n * @property {number} methodNotFound\n * @property {number} internal\n * @property {number} invalidInput\n * @property {number} resourceNotFound\n * @property {number} resourceUnavailable\n * @property {number} transactionRejected\n * @property {number} methodNotSupported\n */\n\n/**\n * @typedef ErrorCodes\n * @property {EthereumRpcErrorCodes} rpc\n * @property {EthereumProviderErrorCodes} provider\n */","map":{"version":3,"sources":["C:/Users/KINSHUK/Desktop/ETH/qd-off-chain-voters-and-candidates/node_modules/eth-json-rpc-errors/index.js"],"names":["require","EthereumRpcError","EthereumProviderError","serializeError","getMessageFromCode","ethErrors","ERROR_CODES","module","exports"],"mappings":"AACA,eAAoDA,OAAO,CAAC,eAAD,CAA3D;AAAA,IAAQC,gBAAR,YAAQA,gBAAR;AAAA,IAA0BC,qBAA1B,YAA0BA,qBAA1B;;AACA,gBAEIF,OAAO,CAAC,aAAD,CAFX;AAAA,IACEG,cADF,aACEA,cADF;AAAA,IACkBC,kBADlB,aACkBA,kBADlB;;AAGA,IAAMC,SAAS,GAAGL,OAAO,CAAC,cAAD,CAAzB;;AACA,IAAMM,WAAW,GAAGN,OAAO,CAAC,uBAAD,CAA3B;;AAEAO,MAAM,CAACC,OAAP,GAAiB;AACfH,EAAAA,SAAS,EAATA,SADe;AAEfJ,EAAAA,gBAAgB,EAAhBA,gBAFe;AAGfC,EAAAA,qBAAqB,EAArBA,qBAHe;AAIfC,EAAAA,cAAc,EAAdA,cAJe;AAKfC,EAAAA,kBAAkB,EAAlBA,kBALe;;AAMf;AACAE,EAAAA,WAAW,EAAXA;AAPe,CAAjB,C,CAUA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA","sourcesContent":["\nconst { EthereumRpcError, EthereumProviderError } = require('./src/classes')\nconst {\n  serializeError, getMessageFromCode,\n} = require('./src/utils')\nconst ethErrors = require('./src/errors')\nconst ERROR_CODES = require('./src/errorCodes.json')\n\nmodule.exports = {\n  ethErrors,\n  EthereumRpcError,\n  EthereumProviderError,\n  serializeError,\n  getMessageFromCode,\n  /** @type ErrorCodes */\n  ERROR_CODES,\n}\n\n// Types\n\n/**\n * @typedef {Object} EthereumProviderErrorCodes\n * @property {number} userRejectedRequest\n * @property {number} unauthorized\n * @property {number} unsupportedMethod\n */\n\n/**\n * @typedef {Object} EthereumRpcErrorCodes\n * @property {number} parse\n * @property {number} invalidRequest\n * @property {number} invalidParams\n * @property {number} methodNotFound\n * @property {number} internal\n * @property {number} invalidInput\n * @property {number} resourceNotFound\n * @property {number} resourceUnavailable\n * @property {number} transactionRejected\n * @property {number} methodNotSupported\n */\n\n/**\n * @typedef ErrorCodes\n * @property {EthereumRpcErrorCodes} rpc\n * @property {EthereumProviderErrorCodes} provider\n */\n"]},"metadata":{},"sourceType":"script"}