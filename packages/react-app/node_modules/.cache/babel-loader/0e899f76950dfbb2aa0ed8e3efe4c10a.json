{"ast":null,"code":"import _regeneratorRuntime from\"C:/Users/KINSHUK/Desktop/ETH/qd-off-chain-voters-and-candidates/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"C:/Users/KINSHUK/Desktop/ETH/qd-off-chain-voters-and-candidates/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"C:/Users/KINSHUK/Desktop/ETH/qd-off-chain-voters-and-candidates/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{Fetcher,Route,Token,WETH}from\"@uniswap/sdk\";import{usePoller}from\"eth-hooks\";import{useState}from\"react\";export default function useExchangePrice(targetNetwork,mainnetProvider,pollTime){var _useState=useState(0),_useState2=_slicedToArray(_useState,2),price=_useState2[0],setPrice=_useState2[1];var pollPrice=function pollPrice(){function getPrice(){return _getPrice.apply(this,arguments);}// getPrice();\nfunction _getPrice(){_getPrice=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var DAI,pair,route;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:if(mainnetProvider){_context.next=2;break;}return _context.abrupt(\"return\",0);case 2:if(!targetNetwork.price){_context.next=6;break;}setPrice(targetNetwork.price);_context.next=12;break;case 6:DAI=new Token(mainnetProvider.network?mainnetProvider.network.chainId:1,\"0x6B175474E89094C44Da98b954EedeAC495271d0F\",18);_context.next=9;return Fetcher.fetchPairData(DAI,WETH[DAI.chainId],mainnetProvider);case 9:pair=_context.sent;route=new Route([pair],WETH[DAI.chainId]);setPrice(parseFloat(route.midPrice.toSignificant(6)));case 12:case\"end\":return _context.stop();}}},_callee);}));return _getPrice.apply(this,arguments);}};usePoller(pollPrice,pollTime||9777);return price;}","map":{"version":3,"sources":["C:/Users/KINSHUK/Desktop/ETH/qd-off-chain-voters-and-candidates/packages/react-app/src/hooks/ExchangePrice.js"],"names":["Fetcher","Route","Token","WETH","usePoller","useState","useExchangePrice","targetNetwork","mainnetProvider","pollTime","price","setPrice","pollPrice","getPrice","DAI","network","chainId","fetchPairData","pair","route","parseFloat","midPrice","toSignificant"],"mappings":"+hBAAA,OAASA,OAAT,CAAkBC,KAAlB,CAAyBC,KAAzB,CAAgCC,IAAhC,KAA4C,cAA5C,CACA,OAASC,SAAT,KAA0B,WAA1B,CACA,OAASC,QAAT,KAAyB,OAAzB,CAEA,cAAe,SAASC,CAAAA,gBAAT,CAA0BC,aAA1B,CAAyCC,eAAzC,CAA0DC,QAA1D,CAAoE,CACjF,cAA0BJ,QAAQ,CAAC,CAAD,CAAlC,wCAAOK,KAAP,eAAcC,QAAd,eAEA,GAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,EAAM,SACPC,CAAAA,QADO,2CAgBtB;AAhBsB,uFACtB,yJACOL,eADP,yDAC+B,CAD/B,aAEMD,aAAa,CAACG,KAFpB,yBAGIC,QAAQ,CAACJ,aAAa,CAACG,KAAf,CAAR,CAHJ,8BAKUI,GALV,CAKgB,GAAIZ,CAAAA,KAAJ,CACVM,eAAe,CAACO,OAAhB,CAA0BP,eAAe,CAACO,OAAhB,CAAwBC,OAAlD,CAA4D,CADlD,CAEV,4CAFU,CAGV,EAHU,CALhB,uBAUuBhB,CAAAA,OAAO,CAACiB,aAAR,CAAsBH,GAAtB,CAA2BX,IAAI,CAACW,GAAG,CAACE,OAAL,CAA/B,CAA8CR,eAA9C,CAVvB,QAUUU,IAVV,eAWUC,KAXV,CAWkB,GAAIlB,CAAAA,KAAJ,CAAU,CAACiB,IAAD,CAAV,CAAkBf,IAAI,CAACW,GAAG,CAACE,OAAL,CAAtB,CAXlB,CAYIL,QAAQ,CAACS,UAAU,CAACD,KAAK,CAACE,QAAN,CAAeC,aAAf,CAA6B,CAA7B,CAAD,CAAX,CAAR,CAZJ,uDADsB,2CAiBvB,CAjBD,CAkBAlB,SAAS,CAACQ,SAAD,CAAYH,QAAQ,EAAI,IAAxB,CAAT,CAEA,MAAOC,CAAAA,KAAP,CACD","sourcesContent":["import { Fetcher, Route, Token, WETH } from \"@uniswap/sdk\";\r\nimport { usePoller } from \"eth-hooks\";\r\nimport { useState } from \"react\";\r\n\r\nexport default function useExchangePrice(targetNetwork, mainnetProvider, pollTime) {\r\n  const [price, setPrice] = useState(0);\r\n\r\n  const pollPrice = () => {\r\n    async function getPrice() {\r\n      if (!mainnetProvider) return 0;\r\n      if (targetNetwork.price) {\r\n        setPrice(targetNetwork.price);\r\n      } else {\r\n        const DAI = new Token(\r\n          mainnetProvider.network ? mainnetProvider.network.chainId : 1,\r\n          \"0x6B175474E89094C44Da98b954EedeAC495271d0F\",\r\n          18,\r\n        );\r\n        const pair = await Fetcher.fetchPairData(DAI, WETH[DAI.chainId], mainnetProvider);\r\n        const route = new Route([pair], WETH[DAI.chainId]);\r\n        setPrice(parseFloat(route.midPrice.toSignificant(6)));\r\n      }\r\n    }\r\n    // getPrice();\r\n  };\r\n  usePoller(pollPrice, pollTime || 9777);\r\n\r\n  return price;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}