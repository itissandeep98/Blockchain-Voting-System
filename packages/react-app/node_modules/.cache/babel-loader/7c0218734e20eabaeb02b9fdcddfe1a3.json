{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\KINSHUK\\\\Desktop\\\\ETH\\\\qd-off-chain-voters-and-candidates\\\\packages\\\\react-app\\\\src\\\\views\\\\QuadraticDiplomacyCreate.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Form, Input, Divider, Button, Typography, Row, Col, Spin } from \"antd\";\nimport { PlusOutlined } from \"@ant-design/icons\";\nimport { DeleteOutlined } from \"@ant-design/icons\";\nimport { AddressInput } from \"../components\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst {\n  Title\n} = Typography;\n\nconst axios = require(\"axios\");\n\nconst {\n  ethers\n} = require(\"ethers\");\n\nexport default function QuadraticDiplomacyCreate(_ref) {\n  _s();\n\n  let {\n    mainnetProvider,\n    serverUrl,\n    address,\n    userSigner,\n    currentDistribution,\n    setCurrentDistribution,\n    isAdmin\n  } = _ref;\n  const [voters, setVoters] = useState([\"\"]);\n  const [candidates, setCandidates] = useState([\"\"]);\n  const [voteAllocation, setVoteAllocation] = useState(0);\n  const [isSendingTx, setIsSendingTx] = useState(false);\n  const [form] = Form.useForm();\n\n  const handleAddVoters = async () => {\n    const text = await navigator.clipboard.readText();\n    const addresses = text.split(\",\");\n\n    if (voters.length === 1 && voters[0] === \"\") {\n      setVoters([]);\n    }\n\n    addresses.forEach(voteAddress => {\n      try {\n        const voteAddressWithChecksum = ethers.utils.getAddress(voteAddress);\n\n        if (!voters.includes(voteAddressWithChecksum)) {\n          setVoters(prevVoters => [...prevVoters, voteAddressWithChecksum]);\n        }\n      } catch (error) {\n        console.log(\"Error parsing address \", voteAddress);\n        console.log(error);\n      }\n    });\n  };\n\n  const handleAddCandidates = async () => {\n    const text = await navigator.clipboard.readText();\n    const addresses = text.split(\",\");\n\n    if (voters.length === 1 && voters[0] === \"\") {\n      setVoters([]);\n    }\n\n    addresses.forEach(candidateAddress => {\n      try {\n        const candidateAddressWithChecksum = ethers.utils.getAddress(candidateAddress);\n\n        if (!candidates.includes(candidateAddressWithChecksum)) {\n          setCandidates(prevCandidates => [...prevCandidates, candidateAddressWithChecksum]);\n        }\n      } catch (error) {\n        console.log(\"Error parsing address \", candidateAddress);\n        console.log(error);\n      }\n    });\n  };\n\n  const handleSubmit = async () => {\n    // ToDo. Check if addresses are valid.\n    setIsSendingTx(true);\n    const filteredVoters = voters.filter(voter => voter);\n    const filteredCandidates = candidates.filter(voter => voter);\n    let message = \"qdip-creation-\" + address;\n    console.log(\"Message:\" + message);\n    const signature = await userSigner.signMessage(message);\n    axios.post(serverUrl + \"distributions\", {\n      address: address,\n      voteAllocation: voteAllocation,\n      members: filteredVoters,\n      candidates: filteredCandidates,\n      signature: signature\n    }).then(response => {\n      console.log(response);\n      setCurrentDistribution(response);\n      setVoters([\"\"]);\n      setVoteAllocation(0);\n      form.resetFields();\n      setIsSendingTx(false);\n    }).catch(e => {\n      console.log(\"Error on distributions post\");\n    });\n  };\n\n  if (!isAdmin) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        border: \"1px solid #cccccc\",\n        padding: 16,\n        width: 800,\n        margin: \"auto\",\n        marginTop: 64\n      },\n      children: [/*#__PURE__*/_jsxDEV(Title, {\n        level: 4,\n        children: \"Access denied\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Only admins can create distributions.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this);\n  }\n\n  if (currentDistribution.id) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        border: \"1px solid #cccccc\",\n        padding: 16,\n        width: 800,\n        margin: \"auto\",\n        marginTop: 64\n      },\n      children: /*#__PURE__*/_jsxDEV(Title, {\n        level: 4,\n        children: [\"Distribution \", currentDistribution.id, \" in progress\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      border: \"1px solid\",\n      padding: \"40px\",\n      width: \"800px\",\n      margin: \"64px auto 0px auto\",\n      textAlign: \"left\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(Title, {\n      level: 3,\n      style: {\n        fontFamily: \"Space Mono\"\n      },\n      children: \"Add members\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      form: form,\n      name: \"basic\",\n      onFinish: handleSubmit,\n      labelCol: {\n        span: 8\n      },\n      wrapperCol: {\n        span: 16\n      },\n      layout: \"horizontal\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n        label: \"Vote Allocation\",\n        name: \"voteCredit\",\n        style: {\n          textAlign: \"left\"\n        },\n        tooltip: \"Number of votes each voter will have\",\n        children: /*#__PURE__*/_jsxDEV(Input, {\n          type: \"number\",\n          placeholder: \"100\",\n          style: {\n            width: \"30%\"\n          },\n          onChange: event => setVoteAllocation(event.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        block: true,\n        onClick: () => handleAddVoters(),\n        children: \"Add Voters from Clipboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this), voters.map((_, index) => /*#__PURE__*/_jsxDEV(VoterInput, {\n        index: index,\n        setVoters: setVoters,\n        voters: voters,\n        mainnetProvider: mainnetProvider\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(Form.Item, {\n        style: {\n          justifyContent: \"center\",\n          marginTop: 24\n        },\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          type: \"dashed\",\n          block: true,\n          icon: /*#__PURE__*/_jsxDEV(PlusOutlined, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 19\n          }, this),\n          onClick: () => setVoters(prevVoters => [...prevVoters, \"\"]),\n          children: \"Add Voter\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        block: true,\n        onClick: () => handleAddCandidates(),\n        children: \"Add Candidates from Clipboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 9\n      }, this), candidates.map((_, index) => /*#__PURE__*/_jsxDEV(VoterInput, {\n        index: index,\n        setVoters: setCandidates,\n        voters: candidates,\n        mainnetProvider: mainnetProvider\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(Form.Item, {\n        style: {\n          justifyContent: \"center\",\n          marginTop: 24\n        },\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          type: \"dashed\",\n          block: true,\n          icon: /*#__PURE__*/_jsxDEV(PlusOutlined, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 19\n          }, this),\n          onClick: () => setCandidates(prevCandidates => [...prevCandidates, \"\"]),\n          children: \"Add Candidate\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n        wrapperCol: {\n          offset: 16,\n          span: 8\n        },\n        children: !isSendingTx ? /*#__PURE__*/_jsxDEV(Button, {\n          type: \"primary\",\n          htmlType: \"submit\",\n          block: true,\n          disabled: !voteAllocation,\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(Spin, {\n          size: \"small\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 5\n  }, this);\n}\n\n_s(QuadraticDiplomacyCreate, \"0u7SPLpJuMADakLh5EUQC4Qqdes=\", false, function () {\n  return [Form.useForm];\n});\n\n_c = QuadraticDiplomacyCreate;\n\nconst VoterInput = _ref2 => {\n  let {\n    index,\n    voters,\n    setVoters,\n    mainnetProvider\n  } = _ref2;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Form.Item, {\n      label: `Voter ${index + 1}`,\n      name: `address[${index}]`,\n      style: {\n        marginBottom: \"16px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        gutter: 8,\n        align: \"middle\",\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          span: 16,\n          children: /*#__PURE__*/_jsxDEV(AddressInput, {\n            autoFocus: true,\n            ensProvider: mainnetProvider,\n            placeholder: \"Enter address\",\n            value: voters[index],\n            onChange: address => {\n              setVoters(prevVoters => {\n                const nextVoters = [...prevVoters];\n                nextVoters[index] = address;\n                return nextVoters;\n              });\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          span: 8,\n          children: /*#__PURE__*/_jsxDEV(DeleteOutlined, {\n            style: {\n              cursor: \"pointer\",\n              color: \"#ff6666\"\n            },\n            onClick: event => {\n              setVoters(prevVoters => {\n                const nextVoters = [...prevVoters];\n                return nextVoters.filter((_, i) => i !== index);\n              });\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_c2 = VoterInput;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"QuadraticDiplomacyCreate\");\n$RefreshReg$(_c2, \"VoterInput\");","map":{"version":3,"sources":["C:/Users/KINSHUK/Desktop/ETH/qd-off-chain-voters-and-candidates/packages/react-app/src/views/QuadraticDiplomacyCreate.jsx"],"names":["React","useState","Form","Input","Divider","Button","Typography","Row","Col","Spin","PlusOutlined","DeleteOutlined","AddressInput","Title","axios","require","ethers","QuadraticDiplomacyCreate","mainnetProvider","serverUrl","address","userSigner","currentDistribution","setCurrentDistribution","isAdmin","voters","setVoters","candidates","setCandidates","voteAllocation","setVoteAllocation","isSendingTx","setIsSendingTx","form","useForm","handleAddVoters","text","navigator","clipboard","readText","addresses","split","length","forEach","voteAddress","voteAddressWithChecksum","utils","getAddress","includes","prevVoters","error","console","log","handleAddCandidates","candidateAddress","candidateAddressWithChecksum","prevCandidates","handleSubmit","filteredVoters","filter","voter","filteredCandidates","message","signature","signMessage","post","members","then","response","resetFields","catch","e","border","padding","width","margin","marginTop","id","textAlign","fontFamily","span","event","target","value","map","_","index","justifyContent","offset","VoterInput","marginBottom","nextVoters","cursor","color","i"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { Form, Input, Divider, Button, Typography, Row, Col, Spin } from \"antd\";\r\nimport { PlusOutlined } from \"@ant-design/icons\";\r\nimport { DeleteOutlined } from \"@ant-design/icons\";\r\nimport { AddressInput } from \"../components\";\r\nconst { Title } = Typography;\r\nconst axios = require(\"axios\");\r\nconst { ethers } = require(\"ethers\");\r\n\r\nexport default function QuadraticDiplomacyCreate({\r\n  mainnetProvider,\r\n  serverUrl,\r\n  address,\r\n  userSigner,\r\n  currentDistribution,\r\n  setCurrentDistribution,\r\n  isAdmin,\r\n}) {\r\n  const [voters, setVoters] = useState([\"\"]);\r\n  const [candidates, setCandidates] = useState([\"\"]);\r\n  const [voteAllocation, setVoteAllocation] = useState(0);\r\n  const [isSendingTx, setIsSendingTx] = useState(false);\r\n  const [form] = Form.useForm();\r\n\r\n  const handleAddVoters = async () => {\r\n    const text = await navigator.clipboard.readText();\r\n    const addresses = text.split(\",\");\r\n    if (voters.length === 1 && voters[0] === \"\") {\r\n      setVoters([]);\r\n    }\r\n    addresses.forEach(voteAddress => {\r\n      try {\r\n        const voteAddressWithChecksum = ethers.utils.getAddress(voteAddress);\r\n        if (!voters.includes(voteAddressWithChecksum)) {\r\n          setVoters(prevVoters => [...prevVoters, voteAddressWithChecksum]);\r\n        }\r\n      } catch (error) {\r\n        console.log(\"Error parsing address \", voteAddress);\r\n        console.log(error);\r\n      }\r\n    });\r\n  };\r\n\r\n  const handleAddCandidates = async () => {\r\n    const text = await navigator.clipboard.readText();\r\n    const addresses = text.split(\",\");\r\n    if (voters.length === 1 && voters[0] === \"\") {\r\n      setVoters([]);\r\n    }\r\n    addresses.forEach(candidateAddress => {\r\n      try {\r\n        const candidateAddressWithChecksum = ethers.utils.getAddress(candidateAddress);\r\n        if (!candidates.includes(candidateAddressWithChecksum)) {\r\n          setCandidates(prevCandidates => [...prevCandidates, candidateAddressWithChecksum]);\r\n        }\r\n      } catch (error) {\r\n        console.log(\"Error parsing address \", candidateAddress);\r\n        console.log(error);\r\n      }\r\n    });\r\n  };\r\n\r\n  const handleSubmit = async () => {\r\n    // ToDo. Check if addresses are valid.\r\n    setIsSendingTx(true);\r\n    const filteredVoters = voters.filter(voter => voter);\r\n    const filteredCandidates = candidates.filter(voter => voter);\r\n\r\n    let message = \"qdip-creation-\" + address;\r\n    console.log(\"Message:\" + message);\r\n\r\n    const signature = await userSigner.signMessage(message);\r\n\r\n    axios\r\n      .post(serverUrl + \"distributions\", {\r\n        address: address,\r\n        voteAllocation: voteAllocation,\r\n        members: filteredVoters,\r\n        candidates: filteredCandidates,\r\n        signature: signature,\r\n      })\r\n      .then(response => {\r\n        console.log(response);\r\n        setCurrentDistribution(response);\r\n        setVoters([\"\"]);\r\n        setVoteAllocation(0);\r\n        form.resetFields();\r\n        setIsSendingTx(false);\r\n      })\r\n      .catch(e => {\r\n        console.log(\"Error on distributions post\");\r\n      });\r\n  };\r\n\r\n  if (!isAdmin) {\r\n    return (\r\n      <div style={{ border: \"1px solid #cccccc\", padding: 16, width: 800, margin: \"auto\", marginTop: 64 }}>\r\n        <Title level={4}>Access denied</Title>\r\n        <p>Only admins can create distributions.</p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (currentDistribution.id) {\r\n    return (\r\n      <div style={{ border: \"1px solid #cccccc\", padding: 16, width: 800, margin: \"auto\", marginTop: 64 }}>\r\n        <Title level={4}>Distribution {currentDistribution.id} in progress</Title>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div style={{ border: \"1px solid\", padding: \"40px\", width: \"800px\", margin: \"64px auto 0px auto\", textAlign: \"left\" }}>\r\n      <Title level={3} style={{ fontFamily: \"Space Mono\" }}>Add members</Title>\r\n      <Divider />\r\n      <Form form={form} name=\"basic\" onFinish={handleSubmit} labelCol={{ span: 8 }} wrapperCol={{ span: 16 }} layout=\"horizontal\">\r\n        <Form.Item label=\"Vote Allocation\" name=\"voteCredit\" style={{ textAlign: \"left\" }} tooltip=\"Number of votes each voter will have\">\r\n          <Input\r\n            type=\"number\"\r\n            placeholder=\"100\"\r\n            style={{ width: \"30%\" }}\r\n            onChange={event => setVoteAllocation(event.target.value)}\r\n          />\r\n        </Form.Item>\r\n        <Divider />\r\n        <Button type=\"primary\" block onClick={() => handleAddVoters()}>\r\n          Add Voters from Clipboard\r\n        </Button>\r\n        <Divider />\r\n        {voters.map((_, index) => (\r\n          <VoterInput\r\n            key={index}\r\n            index={index}\r\n            setVoters={setVoters}\r\n            voters={voters}\r\n            mainnetProvider={mainnetProvider}\r\n          />\r\n        ))}\r\n        <Form.Item style={{ justifyContent: \"center\", marginTop: 24 }}>\r\n          {/*ToDo. Restart ant form state (the browser is keeping filled-removed elements)*/}\r\n          <Button\r\n            type=\"dashed\"\r\n            block\r\n            icon={<PlusOutlined />}\r\n            onClick={() => setVoters(prevVoters => [...prevVoters, \"\"])}\r\n          >\r\n            Add Voter\r\n          </Button>\r\n        </Form.Item>\r\n        <Divider />\r\n        <Button type=\"primary\" block onClick={() => handleAddCandidates()}>\r\n          Add Candidates from Clipboard\r\n        </Button>\r\n        <Divider />\r\n        {candidates.map((_, index) => (\r\n          <VoterInput\r\n            key={index}\r\n            index={index}\r\n            setVoters={setCandidates}\r\n            voters={candidates}\r\n            mainnetProvider={mainnetProvider}\r\n          />\r\n        ))}\r\n        <Form.Item style={{ justifyContent: \"center\", marginTop: 24 }}>\r\n          {/*ToDo. Restart ant form state (the browser is keeping filled-removed elements)*/}\r\n          <Button\r\n            type=\"dashed\"\r\n            block\r\n            icon={<PlusOutlined />}\r\n            onClick={() => setCandidates(prevCandidates => [...prevCandidates, \"\"])}\r\n          >\r\n            Add Candidate\r\n          </Button>\r\n        </Form.Item>\r\n        <Divider />\r\n        <Form.Item wrapperCol={{ offset: 16, span: 8 }}>\r\n          {!isSendingTx ? (\r\n            <Button type=\"primary\" htmlType=\"submit\" block disabled={!voteAllocation}>\r\n              Submit\r\n            </Button>\r\n          ) : (\r\n            <Spin size=\"small\" />\r\n          )}\r\n        </Form.Item>\r\n      </Form>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst VoterInput = ({ index, voters, setVoters, mainnetProvider }) => {\r\n  return (\r\n    <>\r\n      <Form.Item label={`Voter ${index + 1}`} name={`address[${index}]`} style={{ marginBottom: \"16px\" }}>\r\n        <Row gutter={8} align=\"middle\">\r\n          <Col span={16}>\r\n            <AddressInput\r\n              autoFocus\r\n              ensProvider={mainnetProvider}\r\n              placeholder=\"Enter address\"\r\n              value={voters[index]}\r\n              onChange={address => {\r\n                setVoters(prevVoters => {\r\n                  const nextVoters = [...prevVoters];\r\n                  nextVoters[index] = address;\r\n                  return nextVoters;\r\n                });\r\n              }}\r\n            />\r\n          </Col>\r\n          <Col span={8}>\r\n            <DeleteOutlined\r\n              style={{ cursor: \"pointer\", color: \"#ff6666\" }}\r\n              onClick={event => {\r\n                setVoters(prevVoters => {\r\n                  const nextVoters = [...prevVoters];\r\n                  return nextVoters.filter((_, i) => i !== index);\r\n                });\r\n              }}\r\n            />\r\n          </Col>\r\n        </Row>\r\n      </Form.Item>\r\n    </>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}