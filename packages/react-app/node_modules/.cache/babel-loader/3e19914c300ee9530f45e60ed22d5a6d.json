{"ast":null,"code":"import _slicedToArray from\"C:/Users/KINSHUK/Desktop/ETH/qd-off-chain-voters-and-candidates/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _regeneratorRuntime from\"C:/Users/KINSHUK/Desktop/ETH/qd-off-chain-voters-and-candidates/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"C:/Users/KINSHUK/Desktop/ETH/qd-off-chain-voters-and-candidates/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import{utils}from\"ethers\";import{useEffect,useState}from\"react\";// resolved if(name){} to not save \"\" into cache\n/*\r\n  ~ What it does? ~\r\n\r\n  Gets ENS name from given address and provider\r\n\r\n  ~ How can I use? ~\r\n\r\n  const ensName = useLookupAddress(mainnetProvider, address);\r\n\r\n  ~ Features ~\r\n\r\n  - Provide address and get ENS name corresponding to given address\r\n*/var lookupAddress=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(provider,address){var reportedName,resolvedAddress;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:if(!(address&&utils.isAddress(address))){_context.next=16;break;}_context.prev=1;_context.next=4;return provider.lookupAddress(address);case 4:reportedName=_context.sent;_context.next=7;return provider.resolveName(reportedName);case 7:resolvedAddress=_context.sent;if(!(address&&utils.getAddress(address)===utils.getAddress(resolvedAddress))){_context.next=10;break;}return _context.abrupt(\"return\",reportedName);case 10:return _context.abrupt(\"return\",utils.getAddress(address));case 13:_context.prev=13;_context.t0=_context[\"catch\"](1);return _context.abrupt(\"return\",utils.getAddress(address));case 16:return _context.abrupt(\"return\",0);case 17:case\"end\":return _context.stop();}}},_callee,null,[[1,13]]);}));return function lookupAddress(_x,_x2){return _ref.apply(this,arguments);};}();var useLookupAddress=function useLookupAddress(provider,address){var _useState=useState(address),_useState2=_slicedToArray(_useState,2),ensName=_useState2[0],setEnsName=_useState2[1];// const [ensCache, setEnsCache] = useLocalStorage('ensCache_'+address); Writing directly due to sync issues\nuseEffect(function(){var cache=window.localStorage.getItem(\"ensCache_\"+address);cache=cache&&JSON.parse(cache);if(cache&&cache.timestamp>Date.now()){setEnsName(cache.name);}else if(provider){lookupAddress(provider,address).then(function(name){if(name){setEnsName(name);window.localStorage.setItem(\"ensCache_\"+address,JSON.stringify({timestamp:Date.now()+360000,name:name}));}});}},[provider,address,setEnsName]);return ensName;};export default useLookupAddress;","map":{"version":3,"sources":["C:/Users/KINSHUK/Desktop/ETH/qd-off-chain-voters-and-candidates/packages/react-app/src/hooks/LookupAddress.js"],"names":["utils","useEffect","useState","lookupAddress","provider","address","isAddress","reportedName","resolveName","resolvedAddress","getAddress","useLookupAddress","ensName","setEnsName","cache","window","localStorage","getItem","JSON","parse","timestamp","Date","now","name","then","setItem","stringify"],"mappings":"+hBAAA,OAASA,KAAT,KAAsB,QAAtB,CACA,OAASC,SAAT,CAAoBC,QAApB,KAAoC,OAApC,CAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAEA,GAAMC,CAAAA,aAAa,0FAAG,iBAAOC,QAAP,CAAiBC,OAAjB,wJAChBA,OAAO,EAAIL,KAAK,CAACM,SAAN,CAAgBD,OAAhB,CADK,iEAMWD,CAAAA,QAAQ,CAACD,aAAT,CAAuBE,OAAvB,CANX,QAMVE,YANU,qCAQcH,CAAAA,QAAQ,CAACI,WAAT,CAAqBD,YAArB,CARd,QAQVE,eARU,oBAUZJ,OAAO,EAAIL,KAAK,CAACU,UAAN,CAAiBL,OAAjB,IAA8BL,KAAK,CAACU,UAAN,CAAiBD,eAAjB,CAV7B,2DAWPF,YAXO,0CAaTP,KAAK,CAACU,UAAN,CAAiBL,OAAjB,CAbS,4FAeTL,KAAK,CAACU,UAAN,CAAiBL,OAAjB,CAfS,0CAkBb,CAlBa,uEAAH,kBAAbF,CAAAA,aAAa,gDAAnB,CAqBA,GAAMQ,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,CAACP,QAAD,CAAWC,OAAX,CAAuB,CAC9C,cAA8BH,QAAQ,CAACG,OAAD,CAAtC,wCAAOO,OAAP,eAAgBC,UAAhB,eACA;AAEAZ,SAAS,CAAC,UAAM,CACd,GAAIa,CAAAA,KAAK,CAAGC,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,YAAcZ,OAA1C,CAAZ,CACAS,KAAK,CAAGA,KAAK,EAAII,IAAI,CAACC,KAAL,CAAWL,KAAX,CAAjB,CAEA,GAAIA,KAAK,EAAIA,KAAK,CAACM,SAAN,CAAkBC,IAAI,CAACC,GAAL,EAA/B,CAA2C,CACzCT,UAAU,CAACC,KAAK,CAACS,IAAP,CAAV,CACD,CAFD,IAEO,IAAInB,QAAJ,CAAc,CACnBD,aAAa,CAACC,QAAD,CAAWC,OAAX,CAAb,CAAiCmB,IAAjC,CAAsC,SAAAD,IAAI,CAAI,CAC5C,GAAIA,IAAJ,CAAU,CACRV,UAAU,CAACU,IAAD,CAAV,CACAR,MAAM,CAACC,YAAP,CAAoBS,OAApB,CACE,YAAcpB,OADhB,CAEEa,IAAI,CAACQ,SAAL,CAAe,CACbN,SAAS,CAAEC,IAAI,CAACC,GAAL,GAAa,MADX,CAEbC,IAAI,CAAJA,IAFa,CAAf,CAFF,EAOD,CACF,CAXD,EAYD,CACF,CApBQ,CAoBN,CAACnB,QAAD,CAAWC,OAAX,CAAoBQ,UAApB,CApBM,CAAT,CAsBA,MAAOD,CAAAA,OAAP,CACD,CA3BD,CA6BA,cAAeD,CAAAA,gBAAf","sourcesContent":["import { utils } from \"ethers\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\n// resolved if(name){} to not save \"\" into cache\r\n\r\n/*\r\n  ~ What it does? ~\r\n\r\n  Gets ENS name from given address and provider\r\n\r\n  ~ How can I use? ~\r\n\r\n  const ensName = useLookupAddress(mainnetProvider, address);\r\n\r\n  ~ Features ~\r\n\r\n  - Provide address and get ENS name corresponding to given address\r\n*/\r\n\r\nconst lookupAddress = async (provider, address) => {\r\n  if (address && utils.isAddress(address)) {\r\n    // console.log(`looking up ${address}`)\r\n    try {\r\n      // Accuracy of reverse resolution is not enforced.\r\n      // We then manually ensure that the reported ens name resolves to address\r\n      const reportedName = await provider.lookupAddress(address);\r\n\r\n      const resolvedAddress = await provider.resolveName(reportedName);\r\n\r\n      if (address && utils.getAddress(address) === utils.getAddress(resolvedAddress)) {\r\n        return reportedName;\r\n      }\r\n      return utils.getAddress(address);\r\n    } catch (e) {\r\n      return utils.getAddress(address);\r\n    }\r\n  }\r\n  return 0;\r\n};\r\n\r\nconst useLookupAddress = (provider, address) => {\r\n  const [ensName, setEnsName] = useState(address);\r\n  // const [ensCache, setEnsCache] = useLocalStorage('ensCache_'+address); Writing directly due to sync issues\r\n\r\n  useEffect(() => {\r\n    let cache = window.localStorage.getItem(\"ensCache_\" + address);\r\n    cache = cache && JSON.parse(cache);\r\n\r\n    if (cache && cache.timestamp > Date.now()) {\r\n      setEnsName(cache.name);\r\n    } else if (provider) {\r\n      lookupAddress(provider, address).then(name => {\r\n        if (name) {\r\n          setEnsName(name);\r\n          window.localStorage.setItem(\r\n            \"ensCache_\" + address,\r\n            JSON.stringify({\r\n              timestamp: Date.now() + 360000,\r\n              name,\r\n            }),\r\n          );\r\n        }\r\n      });\r\n    }\r\n  }, [provider, address, setEnsName]);\r\n\r\n  return ensName;\r\n};\r\n\r\nexport default useLookupAddress;\r\n"]},"metadata":{},"sourceType":"module"}