{"ast":null,"code":"import{Skeleton,Typography}from\"antd\";import React from\"react\";import Blockies from\"react-blockies\";import{useThemeSwitcher}from\"react-css-theme-switcher\";import{useLookupAddress}from\"../hooks\";// changed value={address} to address={address}\n/*\r\n  ~ What it does? ~\r\n\r\n  Displays an address with a blockie image and option to copy address\r\n\r\n  ~ How can I use? ~\r\n\r\n  <Address\r\n    address={address}\r\n    ensProvider={mainnetProvider}\r\n    blockExplorer={blockExplorer}\r\n    fontSize={fontSize}\r\n  />\r\n\r\n  ~ Features ~\r\n\r\n  - Provide ensProvider={mainnetProvider} and your address will be replaced by ENS name\r\n              (ex. \"0xa870\" => \"user.eth\")\r\n  - Provide blockExplorer={blockExplorer}, click on address and get the link\r\n              (ex. by default \"https://etherscan.io/\" or for xdai \"https://blockscout.com/poa/xdai/\")\r\n  - Provide fontSize={fontSize} to change the size of address text\r\n*/import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Text=Typography.Text;var blockExplorerLink=function blockExplorerLink(address,blockExplorer){return\"\".concat(blockExplorer||\"https://etherscan.io/\",\"address/\").concat(address);};export default function Address(props){var address=props.value||props.address;var ens=useLookupAddress(props.ensProvider,address);var _useThemeSwitcher=useThemeSwitcher(),currentTheme=_useThemeSwitcher.currentTheme;if(!address){return/*#__PURE__*/_jsx(\"span\",{children:/*#__PURE__*/_jsx(Skeleton,{avatar:true,paragraph:{rows:1}})});}var displayAddress=address.substr(0,6);if(ens&&ens.indexOf(\"0x\")<0){displayAddress=ens;}else if(props.size===\"short\"){displayAddress+=\"...\"+address.substr(-4);}else if(props.size===\"long\"){displayAddress=address;}var etherscanLink=blockExplorerLink(address,props.blockExplorer);if(props.minimized){return/*#__PURE__*/_jsx(\"span\",{style:{verticalAlign:\"middle\"},children:/*#__PURE__*/_jsx(\"a\",{style:{color:currentTheme===\"light\"?\"#222222\":\"#C9B8FF\"},target:\"_blank\",href:etherscanLink,rel:\"noopener noreferrer\",children:/*#__PURE__*/_jsx(Blockies,{seed:address.toLowerCase(),size:8,scale:2})})});}var text;if(props.onChange){text=/*#__PURE__*/_jsx(Text,{editable:{onChange:props.onChange},copyable:{text:address},children:/*#__PURE__*/_jsx(\"a\",{style:{color:currentTheme===\"light\"?\"#222222\":\"#C9B8FF\"},target:\"_blank\",href:etherscanLink,rel:\"noopener noreferrer\",children:displayAddress})});}else{text=/*#__PURE__*/_jsx(Text,{copyable:{text:address},children:/*#__PURE__*/_jsx(\"a\",{style:{color:currentTheme===\"light\"?\"#222222\":\"#C9B8FF\"},target:\"_blank\",href:etherscanLink,rel:\"noopener noreferrer\",children:displayAddress})});}return/*#__PURE__*/_jsxs(\"span\",{children:[/*#__PURE__*/_jsx(\"span\",{style:{verticalAlign:\"middle\"},children:/*#__PURE__*/_jsx(Blockies,{seed:address.toLowerCase(),size:8,scale:props.fontSize?props.fontSize/7:4})}),/*#__PURE__*/_jsx(\"span\",{style:{verticalAlign:\"middle\",paddingLeft:5,fontSize:props.fontSize?props.fontSize:28},children:text})]});}","map":{"version":3,"sources":["C:/Users/KINSHUK/Desktop/ETH/qd-off-chain-voters-and-candidates/packages/react-app/src/components/Address.jsx"],"names":["Skeleton","Typography","React","Blockies","useThemeSwitcher","useLookupAddress","Text","blockExplorerLink","address","blockExplorer","Address","props","value","ens","ensProvider","currentTheme","rows","displayAddress","substr","indexOf","size","etherscanLink","minimized","verticalAlign","color","toLowerCase","text","onChange","fontSize","paddingLeft"],"mappings":"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","sourcesContent":["import { Skeleton, Typography } from \"antd\";\r\nimport React from \"react\";\r\nimport Blockies from \"react-blockies\";\r\nimport { useThemeSwitcher } from \"react-css-theme-switcher\";\r\nimport { useLookupAddress } from \"../hooks\";\r\n\r\n// changed value={address} to address={address}\r\n\r\n/*\r\n  ~ What it does? ~\r\n\r\n  Displays an address with a blockie image and option to copy address\r\n\r\n  ~ How can I use? ~\r\n\r\n  <Address\r\n    address={address}\r\n    ensProvider={mainnetProvider}\r\n    blockExplorer={blockExplorer}\r\n    fontSize={fontSize}\r\n  />\r\n\r\n  ~ Features ~\r\n\r\n  - Provide ensProvider={mainnetProvider} and your address will be replaced by ENS name\r\n              (ex. \"0xa870\" => \"user.eth\")\r\n  - Provide blockExplorer={blockExplorer}, click on address and get the link\r\n              (ex. by default \"https://etherscan.io/\" or for xdai \"https://blockscout.com/poa/xdai/\")\r\n  - Provide fontSize={fontSize} to change the size of address text\r\n*/\r\n\r\nconst { Text } = Typography;\r\n\r\nconst blockExplorerLink = (address, blockExplorer) =>\r\n  `${blockExplorer || \"https://etherscan.io/\"}${\"address/\"}${address}`;\r\n\r\nexport default function Address(props) {\r\n  const address = props.value || props.address;\r\n\r\n  const ens = useLookupAddress(props.ensProvider, address);\r\n\r\n  const { currentTheme } = useThemeSwitcher();\r\n\r\n  if (!address) {\r\n    return (\r\n      <span>\r\n        <Skeleton avatar paragraph={{ rows: 1 }} />\r\n      </span>\r\n    );\r\n  }\r\n\r\n  let displayAddress = address.substr(0, 6);\r\n\r\n  if (ens && ens.indexOf(\"0x\") < 0) {\r\n    displayAddress = ens;\r\n  } else if (props.size === \"short\") {\r\n    displayAddress += \"...\" + address.substr(-4);\r\n  } else if (props.size === \"long\") {\r\n    displayAddress = address;\r\n  }\r\n\r\n  const etherscanLink = blockExplorerLink(address, props.blockExplorer);\r\n  if (props.minimized) {\r\n    return (\r\n      <span style={{ verticalAlign: \"middle\" }}>\r\n        <a\r\n          style={{ color: currentTheme === \"light\" ? \"#222222\" : \"#C9B8FF\" }}\r\n          target=\"_blank\"\r\n          href={etherscanLink}\r\n          rel=\"noopener noreferrer\"\r\n        >\r\n          <Blockies seed={address.toLowerCase()} size={8} scale={2} />\r\n        </a>\r\n      </span>\r\n    );\r\n  }\r\n\r\n  let text;\r\n  if (props.onChange) {\r\n    text = (\r\n      <Text editable={{ onChange: props.onChange }} copyable={{ text: address }}>\r\n        <a\r\n          style={{ color: currentTheme === \"light\" ? \"#222222\" : \"#C9B8FF\" }}\r\n          target=\"_blank\"\r\n          href={etherscanLink}\r\n          rel=\"noopener noreferrer\"\r\n        >\r\n          {displayAddress}\r\n        </a>\r\n      </Text>\r\n    );\r\n  } else {\r\n    text = (\r\n      <Text copyable={{ text: address }}>\r\n        <a\r\n          style={{ color: currentTheme === \"light\" ? \"#222222\" : \"#C9B8FF\" }}\r\n          target=\"_blank\"\r\n          href={etherscanLink}\r\n          rel=\"noopener noreferrer\"\r\n        >\r\n          {displayAddress}\r\n        </a>\r\n      </Text>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <span>\r\n      <span style={{ verticalAlign: \"middle\" }}>\r\n        <Blockies seed={address.toLowerCase()} size={8} scale={props.fontSize ? props.fontSize / 7 : 4} />\r\n      </span>\r\n      <span style={{ verticalAlign: \"middle\", paddingLeft: 5, fontSize: props.fontSize ? props.fontSize : 28 }}>\r\n        {text}\r\n      </span>\r\n    </span>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}