{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\KINSHUK\\\\Desktop\\\\ETH\\\\qd-off-chain-voters-and-candidates\\\\packages\\\\react-app\\\\src\\\\components\\\\Wallet.jsx\",\n    _s = $RefreshSig$();\n\nimport { KeyOutlined, QrcodeOutlined, SendOutlined, WalletOutlined } from \"@ant-design/icons\";\nimport { Button, Modal, Spin, Tooltip, Typography } from \"antd\";\nimport { ethers } from \"ethers\";\nimport QR from \"qrcode.react\";\nimport React, { useState, useEffect } from \"react\";\nimport { Transactor } from \"../helpers\";\nimport Address from \"./Address\";\nimport AddressInput from \"./AddressInput\";\nimport Balance from \"./Balance\";\nimport EtherInput from \"./EtherInput\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  Text,\n  Paragraph\n} = Typography;\n/*\r\n  ~ What it does? ~\r\n\r\n  Displays a wallet where you can specify address and send USD/ETH, with options to\r\n  scan address, to convert between USD and ETH, to see and generate private keys,\r\n  to send, receive and extract the burner wallet\r\n\r\n  ~ How can I use? ~\r\n\r\n  <Wallet\r\n    provider={userProvider}\r\n    address={address}\r\n    ensProvider={mainnetProvider}\r\n    price={price}\r\n    color='red'\r\n  />\r\n\r\n  ~ Features ~\r\n\r\n  - Provide provider={userProvider} to display a wallet\r\n  - Provide address={address} if you want to specify address, otherwise\r\n                                                    your default address will be used\r\n  - Provide ensProvider={mainnetProvider} and your address will be replaced by ENS name\r\n              (ex. \"0xa870\" => \"user.eth\") or you can enter directly ENS name instead of address\r\n  - Provide price={price} of ether and easily convert between USD and ETH\r\n  - Provide color to specify the color of wallet icon\r\n*/\n\nexport default function Wallet(props) {\n  _s();\n\n  const [signerAddress, setSignerAddress] = useState();\n  useEffect(() => {\n    async function getAddress() {\n      if (props.signer) {\n        const newAddress = await props.signer.getAddress();\n        setSignerAddress(newAddress);\n      }\n    }\n\n    getAddress();\n  }, [props.signer]);\n  const selectedAddress = props.address || signerAddress;\n  const [open, setOpen] = useState();\n  const [qr, setQr] = useState();\n  const [amount, setAmount] = useState();\n  const [toAddress, setToAddress] = useState();\n  const [pk, setPK] = useState();\n  const providerSend = props.provider ? /*#__PURE__*/_jsxDEV(Tooltip, {\n    title: \"Wallet\",\n    children: /*#__PURE__*/_jsxDEV(WalletOutlined, {\n      onClick: () => {\n        setOpen(!open);\n      },\n      rotate: -90,\n      style: {\n        padding: 7,\n        color: props.color ? props.color : \"\",\n        cursor: \"pointer\",\n        fontSize: 28,\n        verticalAlign: \"middle\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this) : \"\";\n  let display;\n  let receiveButton;\n  let privateKeyButton;\n\n  if (qr) {\n    display = /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Text, {\n          copyable: true,\n          children: selectedAddress\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(QR, {\n        value: selectedAddress,\n        size: \"450\",\n        level: \"H\",\n        includeMargin: true,\n        renderAs: \"svg\",\n        imageSettings: {\n          excavate: false\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this);\n    receiveButton = /*#__PURE__*/_jsxDEV(Button, {\n      onClick: () => {\n        setQr(\"\");\n      },\n      children: [/*#__PURE__*/_jsxDEV(QrcodeOutlined, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this), \" Hide\"]\n    }, \"hide\", true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this);\n    privateKeyButton = /*#__PURE__*/_jsxDEV(Button, {\n      onClick: () => {\n        setPK(selectedAddress);\n        setQr(\"\");\n      },\n      children: [/*#__PURE__*/_jsxDEV(KeyOutlined, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this), \" Private Key\"]\n    }, \"hide\", true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this);\n  } else if (pk) {\n    const pk = localStorage.getItem(\"metaPrivateKey\");\n    const wallet = new ethers.Wallet(pk);\n\n    if (wallet.address !== selectedAddress) {\n      display = /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"*injected account*, private key unknown\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this);\n    } else {\n      const extraPkDisplayAdded = {};\n      const extraPkDisplay = [];\n      extraPkDisplayAdded[wallet.address] = true;\n      extraPkDisplay.push( /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          fontSize: 16,\n          padding: 2,\n          backgroundStyle: \"#89e789\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"/pk#\" + pk,\n          children: [/*#__PURE__*/_jsxDEV(Address, {\n            minimized: true,\n            address: wallet.address,\n            ensProvider: props.ensProvider\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 13\n          }, this), \" \", wallet.address.substr(0, 6)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this));\n\n      for (const key in localStorage) {\n        if (key.indexOf(\"metaPrivateKey_backup\") >= 0) {\n          console.log(key);\n          const pastpk = localStorage.getItem(key);\n          const pastwallet = new ethers.Wallet(pastpk);\n\n          if (!extraPkDisplayAdded[pastwallet.address]\n          /* && selectedAddress!=pastwallet.address */\n          ) {\n            extraPkDisplayAdded[pastwallet.address] = true;\n            extraPkDisplay.push( /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                fontSize: 16\n              },\n              children: /*#__PURE__*/_jsxDEV(\"a\", {\n                href: \"/pk#\" + pastpk,\n                children: [/*#__PURE__*/_jsxDEV(Address, {\n                  minimized: true,\n                  address: pastwallet.address,\n                  ensProvider: props.ensProvider\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 153,\n                  columnNumber: 19\n                }, this), \" \", pastwallet.address.substr(0, 6)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 152,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 15\n            }, this));\n          }\n        }\n      }\n\n      display = /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"Private Key:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Text, {\n            copyable: true,\n            children: pk\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n          children: [\"Point your camera phone at qr code to open in\", /*#__PURE__*/_jsxDEV(\"a\", {\n            target: \"_blank\",\n            href: \"https://xdai.io/\" + pk,\n            rel: \"noopener noreferrer\",\n            children: \"burner wallet\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 13\n          }, this), \":\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(QR, {\n          value: \"https://xdai.io/\" + pk,\n          size: \"450\",\n          level: \"H\",\n          includeMargin: true,\n          renderAs: \"svg\",\n          imageSettings: {\n            excavate: false\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Paragraph, {\n          style: {\n            fontSize: \"16\"\n          },\n          copyable: true,\n          children: \"https://xdai.io/\" + pk\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 11\n        }, this), extraPkDisplay ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Known Private Keys:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 15\n          }, this), extraPkDisplay, /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => {\n              const currentPrivateKey = window.localStorage.getItem(\"metaPrivateKey\");\n\n              if (currentPrivateKey) {\n                window.localStorage.setItem(\"metaPrivateKey_backup\" + Date.now(), currentPrivateKey);\n              }\n\n              const randomWallet = ethers.Wallet.createRandom();\n\n              const privateKey = randomWallet._signingKey().privateKey;\n\n              window.localStorage.setItem(\"metaPrivateKey\", privateKey);\n              window.location.reload();\n            },\n            children: \"Generate\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 13\n        }, this) : \"\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }, this);\n    }\n\n    receiveButton = /*#__PURE__*/_jsxDEV(Button, {\n      onClick: () => {\n        setQr(selectedAddress);\n        setPK(\"\");\n      },\n      children: [/*#__PURE__*/_jsxDEV(QrcodeOutlined, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 9\n      }, this), \" Receive\"]\n    }, \"receive\", true, {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 7\n    }, this);\n    privateKeyButton = /*#__PURE__*/_jsxDEV(Button, {\n      onClick: () => {\n        setPK(\"\");\n        setQr(\"\");\n      },\n      children: [/*#__PURE__*/_jsxDEV(KeyOutlined, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 9\n      }, this), \" Hide\"]\n    }, \"hide\", true, {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 7\n    }, this);\n  } else {\n    const inputStyle = {\n      padding: 10\n    };\n    display = /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: inputStyle,\n        children: /*#__PURE__*/_jsxDEV(AddressInput, {\n          autoFocus: true,\n          ensProvider: props.ensProvider,\n          placeholder: \"to address\",\n          address: toAddress,\n          onChange: setToAddress\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: inputStyle,\n        children: /*#__PURE__*/_jsxDEV(EtherInput, {\n          price: props.price,\n          value: amount,\n          onChange: value => {\n            setAmount(value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 7\n    }, this);\n    receiveButton = /*#__PURE__*/_jsxDEV(Button, {\n      onClick: () => {\n        setQr(selectedAddress);\n        setPK(\"\");\n      },\n      children: [/*#__PURE__*/_jsxDEV(QrcodeOutlined, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 9\n      }, this), \" Receive\"]\n    }, \"receive\", true, {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 7\n    }, this);\n    privateKeyButton = /*#__PURE__*/_jsxDEV(Button, {\n      onClick: () => {\n        setPK(selectedAddress);\n        setQr(\"\");\n      },\n      children: [/*#__PURE__*/_jsxDEV(KeyOutlined, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 9\n      }, this), \" Private Key\"]\n    }, \"hide\", true, {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"span\", {\n    children: [providerSend, /*#__PURE__*/_jsxDEV(Modal, {\n      visible: open,\n      title: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [selectedAddress ? /*#__PURE__*/_jsxDEV(Address, {\n          address: selectedAddress,\n          ensProvider: props.ensProvider\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 32\n        }, this) : /*#__PURE__*/_jsxDEV(Spin, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 104\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            float: \"right\",\n            paddingRight: 25\n          },\n          children: /*#__PURE__*/_jsxDEV(Balance, {\n            address: selectedAddress,\n            provider: props.provider,\n            dollarMultiplier: props.price\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 300,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 11\n      }, this),\n      onOk: () => {\n        setQr();\n        setPK();\n        setOpen(!open);\n      },\n      onCancel: () => {\n        setQr();\n        setPK();\n        setOpen(!open);\n      },\n      footer: [privateKeyButton, receiveButton, /*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        disabled: !amount || !toAddress || qr,\n        loading: false,\n        onClick: () => {\n          const tx = Transactor(props.signer || props.provider);\n          let value;\n\n          try {\n            value = ethers.utils.parseEther(\"\" + amount);\n          } catch (e) {\n            // failed to parseEther, try something else\n            value = ethers.utils.parseEther(\"\" + parseFloat(amount).toFixed(8));\n          }\n\n          tx({\n            to: toAddress,\n            value\n          });\n          setOpen(!open);\n          setQr();\n        },\n        children: [/*#__PURE__*/_jsxDEV(SendOutlined, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 341,\n          columnNumber: 13\n        }, this), \" Send\"]\n      }, \"submit\", true, {\n        fileName: _jsxFileName,\n        lineNumber: 317,\n        columnNumber: 11\n      }, this)],\n      children: display\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 292,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Wallet, \"RR8RrILVK4aiQPz9aSoOMtj+2GU=\");\n\n_c = Wallet;\n\nvar _c;\n\n$RefreshReg$(_c, \"Wallet\");","map":{"version":3,"sources":["C:/Users/KINSHUK/Desktop/ETH/qd-off-chain-voters-and-candidates/packages/react-app/src/components/Wallet.jsx"],"names":["KeyOutlined","QrcodeOutlined","SendOutlined","WalletOutlined","Button","Modal","Spin","Tooltip","Typography","ethers","QR","React","useState","useEffect","Transactor","Address","AddressInput","Balance","EtherInput","Text","Paragraph","Wallet","props","signerAddress","setSignerAddress","getAddress","signer","newAddress","selectedAddress","address","open","setOpen","qr","setQr","amount","setAmount","toAddress","setToAddress","pk","setPK","providerSend","provider","padding","color","cursor","fontSize","verticalAlign","display","receiveButton","privateKeyButton","excavate","localStorage","getItem","wallet","extraPkDisplayAdded","extraPkDisplay","push","backgroundStyle","ensProvider","substr","key","indexOf","console","log","pastpk","pastwallet","currentPrivateKey","window","setItem","Date","now","randomWallet","createRandom","privateKey","_signingKey","location","reload","inputStyle","price","value","float","paddingRight","tx","utils","parseEther","e","parseFloat","toFixed","to"],"mappings":"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","sourcesContent":["import { KeyOutlined, QrcodeOutlined, SendOutlined, WalletOutlined } from \"@ant-design/icons\";\r\nimport { Button, Modal, Spin, Tooltip, Typography } from \"antd\";\r\nimport { ethers } from \"ethers\";\r\nimport QR from \"qrcode.react\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { Transactor } from \"../helpers\";\r\nimport Address from \"./Address\";\r\nimport AddressInput from \"./AddressInput\";\r\nimport Balance from \"./Balance\";\r\nimport EtherInput from \"./EtherInput\";\r\n\r\nconst { Text, Paragraph } = Typography;\r\n\r\n/*\r\n  ~ What it does? ~\r\n\r\n  Displays a wallet where you can specify address and send USD/ETH, with options to\r\n  scan address, to convert between USD and ETH, to see and generate private keys,\r\n  to send, receive and extract the burner wallet\r\n\r\n  ~ How can I use? ~\r\n\r\n  <Wallet\r\n    provider={userProvider}\r\n    address={address}\r\n    ensProvider={mainnetProvider}\r\n    price={price}\r\n    color='red'\r\n  />\r\n\r\n  ~ Features ~\r\n\r\n  - Provide provider={userProvider} to display a wallet\r\n  - Provide address={address} if you want to specify address, otherwise\r\n                                                    your default address will be used\r\n  - Provide ensProvider={mainnetProvider} and your address will be replaced by ENS name\r\n              (ex. \"0xa870\" => \"user.eth\") or you can enter directly ENS name instead of address\r\n  - Provide price={price} of ether and easily convert between USD and ETH\r\n  - Provide color to specify the color of wallet icon\r\n*/\r\n\r\nexport default function Wallet(props) {\r\n  const [signerAddress, setSignerAddress] = useState();\r\n  useEffect(() => {\r\n    async function getAddress() {\r\n      if (props.signer) {\r\n        const newAddress = await props.signer.getAddress();\r\n        setSignerAddress(newAddress);\r\n      }\r\n    }\r\n    getAddress();\r\n  }, [props.signer]);\r\n\r\n  const selectedAddress = props.address || signerAddress;\r\n\r\n  const [open, setOpen] = useState();\r\n  const [qr, setQr] = useState();\r\n  const [amount, setAmount] = useState();\r\n  const [toAddress, setToAddress] = useState();\r\n  const [pk, setPK] = useState();\r\n\r\n  const providerSend = props.provider ? (\r\n    <Tooltip title=\"Wallet\">\r\n      <WalletOutlined\r\n        onClick={() => {\r\n          setOpen(!open);\r\n        }}\r\n        rotate={-90}\r\n        style={{\r\n          padding: 7,\r\n          color: props.color ? props.color : \"\",\r\n          cursor: \"pointer\",\r\n          fontSize: 28,\r\n          verticalAlign: \"middle\",\r\n        }}\r\n      />\r\n    </Tooltip>\r\n  ) : (\r\n    \"\"\r\n  );\r\n\r\n  let display;\r\n  let receiveButton;\r\n  let privateKeyButton;\r\n  if (qr) {\r\n    display = (\r\n      <div>\r\n        <div>\r\n          <Text copyable>{selectedAddress}</Text>\r\n        </div>\r\n        <QR\r\n          value={selectedAddress}\r\n          size=\"450\"\r\n          level=\"H\"\r\n          includeMargin\r\n          renderAs=\"svg\"\r\n          imageSettings={{ excavate: false }}\r\n        />\r\n      </div>\r\n    );\r\n    receiveButton = (\r\n      <Button\r\n        key=\"hide\"\r\n        onClick={() => {\r\n          setQr(\"\");\r\n        }}\r\n      >\r\n        <QrcodeOutlined /> Hide\r\n      </Button>\r\n    );\r\n    privateKeyButton = (\r\n      <Button\r\n        key=\"hide\"\r\n        onClick={() => {\r\n          setPK(selectedAddress);\r\n          setQr(\"\");\r\n        }}\r\n      >\r\n        <KeyOutlined /> Private Key\r\n      </Button>\r\n    );\r\n  } else if (pk) {\r\n    const pk = localStorage.getItem(\"metaPrivateKey\");\r\n    const wallet = new ethers.Wallet(pk);\r\n\r\n    if (wallet.address !== selectedAddress) {\r\n      display = (\r\n        <div>\r\n          <b>*injected account*, private key unknown</b>\r\n        </div>\r\n      );\r\n    } else {\r\n      const extraPkDisplayAdded = {};\r\n      const extraPkDisplay = [];\r\n      extraPkDisplayAdded[wallet.address] = true;\r\n      extraPkDisplay.push(\r\n        <div style={{ fontSize: 16, padding: 2, backgroundStyle: \"#89e789\" }}>\r\n          <a href={\"/pk#\" + pk}>\r\n            <Address minimized address={wallet.address} ensProvider={props.ensProvider} /> {wallet.address.substr(0, 6)}\r\n          </a>\r\n        </div>,\r\n      );\r\n      for (const key in localStorage) {\r\n        if (key.indexOf(\"metaPrivateKey_backup\") >= 0) {\r\n          console.log(key);\r\n          const pastpk = localStorage.getItem(key);\r\n          const pastwallet = new ethers.Wallet(pastpk);\r\n          if (!extraPkDisplayAdded[pastwallet.address] /* && selectedAddress!=pastwallet.address */) {\r\n            extraPkDisplayAdded[pastwallet.address] = true;\r\n            extraPkDisplay.push(\r\n              <div style={{ fontSize: 16 }}>\r\n                <a href={\"/pk#\" + pastpk}>\r\n                  <Address minimized address={pastwallet.address} ensProvider={props.ensProvider} />{\" \"}\r\n                  {pastwallet.address.substr(0, 6)}\r\n                </a>\r\n              </div>,\r\n            );\r\n          }\r\n        }\r\n      }\r\n\r\n      display = (\r\n        <div>\r\n          <b>Private Key:</b>\r\n\r\n          <div>\r\n            <Text copyable>{pk}</Text>\r\n          </div>\r\n\r\n          <hr />\r\n\r\n          <i>\r\n            Point your camera phone at qr code to open in\r\n            <a target=\"_blank\" href={\"https://xdai.io/\" + pk} rel=\"noopener noreferrer\">\r\n              burner wallet\r\n            </a>\r\n            :\r\n          </i>\r\n          <QR\r\n            value={\"https://xdai.io/\" + pk}\r\n            size=\"450\"\r\n            level=\"H\"\r\n            includeMargin\r\n            renderAs=\"svg\"\r\n            imageSettings={{ excavate: false }}\r\n          />\r\n\r\n          <Paragraph style={{ fontSize: \"16\" }} copyable>\r\n            {\"https://xdai.io/\" + pk}\r\n          </Paragraph>\r\n\r\n          {extraPkDisplay ? (\r\n            <div>\r\n              <h3>Known Private Keys:</h3>\r\n              {extraPkDisplay}\r\n              <Button\r\n                onClick={() => {\r\n                  const currentPrivateKey = window.localStorage.getItem(\"metaPrivateKey\");\r\n                  if (currentPrivateKey) {\r\n                    window.localStorage.setItem(\"metaPrivateKey_backup\" + Date.now(), currentPrivateKey);\r\n                  }\r\n                  const randomWallet = ethers.Wallet.createRandom();\r\n                  const privateKey = randomWallet._signingKey().privateKey;\r\n                  window.localStorage.setItem(\"metaPrivateKey\", privateKey);\r\n                  window.location.reload();\r\n                }}\r\n              >\r\n                Generate\r\n              </Button>\r\n            </div>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </div>\r\n      );\r\n    }\r\n\r\n    receiveButton = (\r\n      <Button\r\n        key=\"receive\"\r\n        onClick={() => {\r\n          setQr(selectedAddress);\r\n          setPK(\"\");\r\n        }}\r\n      >\r\n        <QrcodeOutlined /> Receive\r\n      </Button>\r\n    );\r\n    privateKeyButton = (\r\n      <Button\r\n        key=\"hide\"\r\n        onClick={() => {\r\n          setPK(\"\");\r\n          setQr(\"\");\r\n        }}\r\n      >\r\n        <KeyOutlined /> Hide\r\n      </Button>\r\n    );\r\n  } else {\r\n    const inputStyle = {\r\n      padding: 10,\r\n    };\r\n\r\n    display = (\r\n      <div>\r\n        <div style={inputStyle}>\r\n          <AddressInput\r\n            autoFocus\r\n            ensProvider={props.ensProvider}\r\n            placeholder=\"to address\"\r\n            address={toAddress}\r\n            onChange={setToAddress}\r\n          />\r\n        </div>\r\n        <div style={inputStyle}>\r\n          <EtherInput\r\n            price={props.price}\r\n            value={amount}\r\n            onChange={value => {\r\n              setAmount(value);\r\n            }}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n    receiveButton = (\r\n      <Button\r\n        key=\"receive\"\r\n        onClick={() => {\r\n          setQr(selectedAddress);\r\n          setPK(\"\");\r\n        }}\r\n      >\r\n        <QrcodeOutlined /> Receive\r\n      </Button>\r\n    );\r\n    privateKeyButton = (\r\n      <Button\r\n        key=\"hide\"\r\n        onClick={() => {\r\n          setPK(selectedAddress);\r\n          setQr(\"\");\r\n        }}\r\n      >\r\n        <KeyOutlined /> Private Key\r\n      </Button>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <span>\r\n      {providerSend}\r\n      <Modal\r\n        visible={open}\r\n        title={\r\n          <div>\r\n            {selectedAddress ? <Address address={selectedAddress} ensProvider={props.ensProvider} /> : <Spin />}\r\n            <div style={{ float: \"right\", paddingRight: 25 }}>\r\n              <Balance address={selectedAddress} provider={props.provider} dollarMultiplier={props.price} />\r\n            </div>\r\n          </div>\r\n        }\r\n        onOk={() => {\r\n          setQr();\r\n          setPK();\r\n          setOpen(!open);\r\n        }}\r\n        onCancel={() => {\r\n          setQr();\r\n          setPK();\r\n          setOpen(!open);\r\n        }}\r\n        footer={[\r\n          privateKeyButton,\r\n          receiveButton,\r\n          <Button\r\n            key=\"submit\"\r\n            type=\"primary\"\r\n            disabled={!amount || !toAddress || qr}\r\n            loading={false}\r\n            onClick={() => {\r\n              const tx = Transactor(props.signer || props.provider);\r\n\r\n              let value;\r\n              try {\r\n                value = ethers.utils.parseEther(\"\" + amount);\r\n              } catch (e) {\r\n                // failed to parseEther, try something else\r\n                value = ethers.utils.parseEther(\"\" + parseFloat(amount).toFixed(8));\r\n              }\r\n\r\n              tx({\r\n                to: toAddress,\r\n                value,\r\n              });\r\n              setOpen(!open);\r\n              setQr();\r\n            }}\r\n          >\r\n            <SendOutlined /> Send\r\n          </Button>,\r\n        ]}\r\n      >\r\n        {display}\r\n      </Modal>\r\n    </span>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}